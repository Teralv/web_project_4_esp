!function(){"use strict";function e(t){return e="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},e(t)}function t(e,t){for(var r=0;r<t.length;r++){var o=t[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,n(o.key),o)}}function n(t){var n=function(t,n){if("object"!==e(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var o=r.call(t,"string");if("object"!==e(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(t);return"symbol"===e(n)?n:String(n)}var r=function(){function e(t,r,o){var i,u,c,a=this,l=o.handleCardClick,s=o.handleDeleteClick,f=o.handleAddLike,p=o.handleRemoveLike,y=o.userID;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),i=this,c=function(e){return a._likesArray=e,a._likesArray},(u=n(u="updateLikes"))in i?Object.defineProperty(i,u,{value:c,enumerable:!0,configurable:!0,writable:!0}):i[u]=c,this._name=t.name,this._link=t.link,this._id=t._id,this._likesArray=t.likes,this._cardLikes=this._likesArray.length,this._ownerId=t.owner._id,this._cardSelector=r,this._handleCardClick=l,this._handleDeleteClick=s,this._handleAddLike=f,this._handleRemoveLike=p,this._user=y,this._heartButton=document.querySelector(".element__heart")}var r,o;return r=e,(o=[{key:"_getTemplate",value:function(){return document.querySelector(this._cardSelector).content.querySelector(".element").cloneNode(!0)}},{key:"generateCard",value:function(){var e=this;this._element=this._getTemplate(),this._setEventListeners(),this._element.querySelector(".element__name").textContent=this._name,this._element.querySelector(".element__image").src=this._link,this._element.querySelector(".element__image").alt="Imagen de ".concat(this._name),this._element.querySelector(".element__like-counter").textContent=this._cardLikes?this._cardLikes:"";var t=this._likesArray.some((function(t){return t._id===e._user}));return this._element.querySelector(".element__heart").classList.toggle("element__heart_black",t),this._element}},{key:"_setEventListeners",value:function(){var e=this;this._element.querySelector(".element__heart").addEventListener("click",(function(){console.log(e._id),e._likesArray.some((function(t){return t._id===e._user}))?e._handleRemoveLike({id:e._id}):e._handleAddLike({id:e._id})})),this._element.querySelector(".element__image").addEventListener("click",(function(){e._openImagePopup()})),this._element.querySelector(".element__trash").addEventListener("click",(function(){e._handleDeleteClick({id:e._id})})),this._ownerId!==this._user&&this._element.querySelector(".element__trash").remove()}},{key:"_addLike",value:function(){this._element.querySelector(".element__heart").classList.add("element__heart_black"),this._element.querySelector(".element__like-counter").textContent=this._likesArray.length}},{key:"_removeLike",value:function(){this._element.querySelector(".element__heart").classList.remove("element__heart_black"),this._element.querySelector(".element__like-counter").textContent=this._likesArray.length,"0"===this._cardLikes&&(this._element.querySelector(".element__like-counter").textContent="")}},{key:"_trashBtn",value:function(){this._element.querySelector(".element__trash").closest(".element").remove()}},{key:"_openImagePopup",value:function(){this._handleCardClick({link:this._link,name:this._name})}}])&&t(r.prototype,o),Object.defineProperty(r,"prototype",{writable:!1}),e}();function o(e){return o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},o(e)}function i(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,a(r.key),r)}}function u(e,t,n){return t&&i(e.prototype,t),n&&i(e,n),Object.defineProperty(e,"prototype",{writable:!1}),e}function c(e,t,n){return(t=a(t))in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e){var t=function(e,t){if("object"!==o(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!==o(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"===o(t)?t:String(t)}var l=u((function e(t){var n=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),c(this,"_showInputError",(function(e,t,n){var r=e.querySelector(".".concat(t.id,"-error"));t.classList.add("form__input_type_error"),r.textContent=n,r.classList.add("form__input-error_active")})),c(this,"_hideInputError",(function(e,t){var n=e.querySelector(".".concat(t.id,"-error"));t.classList.remove("form__input_type_error"),n.classList.remove("form__input-error_active"),n.textContent=""})),c(this,"_checkInputValidity",(function(e,t){t.validity.valid?n._hideInputError(e,t):n._showInputError(e,t,t.validationMessage)})),c(this,"_hasInvalidInput",(function(e){return e.some((function(e){return!e.validity.valid}))})),c(this,"_toggleButtonState",(function(e,t){n._hasInvalidInput(e)?t.classList.add("popup__btn_inactive"):t.classList.remove("popup__btn_inactive")})),c(this,"_setEventListeners",(function(e){var t=Array.from(e.querySelectorAll(".form__input")),r=e.querySelector(".popup__btn");n._toggleButtonState(t,r),t.forEach((function(o){o.addEventListener("input",(function(){n._checkInputValidity(e,o),n._toggleButtonState(t,r)}))}))})),c(this,"enableValidation",(function(){Array.from(document.querySelectorAll(".form")).forEach((function(e){var t=e.querySelector(".popup__btn");e.addEventListener("submit",(function(e){t.classList.add("popup__btn_inactive"),e.preventDefault()})),Array.from(e.querySelectorAll(".form__set")).forEach((function(e){n._setEventListeners(e)}))}))})),this._validation=t}));function s(e){return s="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},s(e)}function f(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==s(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!==s(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(r.key),"symbol"===s(o)?o:String(o)),r)}var o}var p=function(){function e(t,n){var r=t.data,o=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._dataArray=r,this.renderer=o,this._container=document.querySelector(n)}var t,n;return t=e,(n=[{key:"renderedItems",value:function(){var e=this;this._dataArray.forEach((function(t){e.renderer(t)}))}},{key:"addInitalItems",value:function(e){this._container.append(e)}},{key:"addItems",value:function(e){this._container.prepend(e)}}])&&f(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function y(e){return y="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},y(e)}function m(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==y(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!==y(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(r.key),"symbol"===y(o)?o:String(o)),r)}var o}var d=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._popupElement=document.querySelector(t)}var t,n;return t=e,(n=[{key:"open",value:function(){this._popupElement.classList.add("popup_opened"),document.addEventListener("keydown",this._handleEscClose)}},{key:"close",value:function(){this._popupElement.classList.remove("popup_opened"),document.removeEventListener("keydown",this._handleEscClose)}},{key:"_handleEscClose",value:function(e){if("Escape"===e.key)return this.close()}},{key:"_handleOutsideClick",value:function(e){(e.target.classList.contains("popup__section")||e.target.classList.contains("popup__background"))&&this.close()}},{key:"setEventListeners",value:function(){var e=this;this._popupElement.querySelector(".popup__close-btn").addEventListener("click",(function(){e.close()})),document.addEventListener("keydown",(function(t){e._handleEscClose(t)})),this._popupElement.addEventListener("click",(function(t){e._handleOutsideClick(t)}))}}])&&m(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function h(e){return h="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},h(e)}function _(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==h(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!==h(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(r.key),"symbol"===h(o)?o:String(o)),r)}var o}function b(){return b="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=S(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},b.apply(this,arguments)}function v(e,t){return v=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},v(e,t)}function S(e){return S=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},S(e)}var g=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&v(e,t)}(u,e);var t,n,r,o,i=(r=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=S(r);if(o){var n=S(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return function(e,t){if(t&&("object"===h(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(this,e)});function u(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,u),(t=i.call(this,e))._popupImage=t._popupElement.querySelector(".image-popup__image"),t._popupTitle=t._popupElement.querySelector(".image-popup__title"),t}return t=u,(n=[{key:"open",value:function(e){var t=e.link,n=e.name;b(S(u.prototype),"open",this).call(this),this._popupImage.src=t,this._popupImage.alt="Imagen de ".concat(n),this._popupTitle.textContent=n,b(S(u.prototype),"setEventListeners",this).call(this)}}])&&_(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),u}(d);function k(e){return k="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},k(e)}function w(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==k(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!==k(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(r.key),"symbol"===k(o)?o:String(o)),r)}var o}function E(){return E="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=j(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},E.apply(this,arguments)}function L(e,t){return L=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},L(e,t)}function j(e){return j=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},j(e)}var P=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&L(e,t)}(u,e);var t,n,r,o,i=(r=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=j(r);if(o){var n=j(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return function(e,t){if(t&&("object"===k(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(this,e)});function u(e){var t,n=e.popupSelector,r=e.submitCallback;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,u),(t=i.call(this,n))._form=t._popupElement.querySelector(".form"),t._buttonSubmit=t._popupElement.querySelector(".popup__btn"),t._handleFormSubmit=r,t}return t=u,(n=[{key:"_getInputValues",value:function(){var e=this;return this._inputList=this._form.querySelectorAll(".form__input"),this.formValues={},this._inputList.forEach((function(t){e.formValues[t.name]=t.value})),this.formValues}},{key:"setEventListeners",value:function(){var e=this;E(j(u.prototype),"setEventListeners",this).call(this),this._form.addEventListener("submit",(function(t){t.preventDefault(),e._handleFormSubmit(e._getInputValues()),e.close()}))}},{key:"close",value:function(){E(j(u.prototype),"close",this).call(this),this._form.reset(),this._popupElement.querySelector(".popup__btn").classList.add("popup__btn_inactive")}}])&&w(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),u}(d);function O(e){return O="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},O(e)}function q(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==O(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!==O(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(r.key),"symbol"===O(o)?o:String(o)),r)}var o}var C=function(){function e(t){var n=t.nameSelector,r=t.aboutSelector,o=t.avatarSelector,i=t.userID;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._username=n,this._about=r,this._avatarSelector=o,this._userID=i,this._nameInput=document.querySelector("#name-input"),this._aboutInput=document.querySelector("#about-input")}var t,n;return t=e,(n=[{key:"getUserInfo",value:function(){return{name:this._nameInput.textContent,about:this._jobInput.textContent}}},{key:"setUserInfo",value:function(e){var t=e.username,n=e.about;this._username.textContent=t,this._about.textContent=n}},{key:"setUserAvatar",value:function(e){this._avatarSelector.src=e}}])&&q(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function I(e){return I="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},I(e)}function R(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==I(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!==I(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(r.key),"symbol"===I(o)?o:String(o)),r)}var o}var T=function(){function e(t){var n=t.baseURL,r=t.headers;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._baseURL=n,this._headers=r}var t,n;return t=e,(n=[{key:"getInitialCards",value:function(){return fetch("".concat(this._baseURL,"/cards"),{method:"GET",headers:this._headers}).then((function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))}))}},{key:"addNewCard",value:function(e,t){return fetch("".concat(this._baseURL,"/cards"),{method:"POST",headers:this._headers,body:JSON.stringify({name:e,link:t})}).then((function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))}))}},{key:"deleteCard",value:function(e){return fetch("".concat(this._baseURL,"/cards/").concat(e),{method:"DELETE",headers:this._headers}).then((function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))}))}},{key:"getUserInfo",value:function(){return fetch("".concat(this._baseURL,"/users/me"),{method:"GET",headers:this._headers}).then((function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))}))}},{key:"editProfileInfo",value:function(e,t){return fetch("".concat(this._baseURL,"/users/me"),{method:"PATCH",headers:this._headers,body:JSON.stringify({name:e,about:t})}).then((function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))}))}},{key:"addLike",value:function(e){return fetch("".concat(this._baseURL,"/likes/").concat(e),{method:"PUT",headers:this._headers}).then((function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))}))}},{key:"deleteLike",value:function(e){return fetch("".concat(this._baseURL,"/likes/").concat(e),{method:"DELETE",headers:this._headers}).then((function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))}))}},{key:"avatarImage",value:function(e){return fetch("".concat(this._baseURL,"/users/me/avatar"),{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e})}).then((function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))}))}}])&&R(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function A(e){return A="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},A(e)}function D(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==A(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!==A(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(r.key),"symbol"===A(o)?o:String(o)),r)}var o}function x(){return x="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=B(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},x.apply(this,arguments)}function U(e,t){return U=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},U(e,t)}function B(e){return B=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},B(e)}var V=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&U(e,t)}(u,e);var t,n,r,o,i=(r=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=B(r);if(o){var n=B(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return function(e,t){if(t&&("object"===A(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(this,e)});function u(e){var t,n=e.popupSelector,r=e.handleFormSubmit,o=e.submitButton;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,u),(t=i.call(this,n))._handleFormSubmit=r,t._submitButton=o,t}return t=u,(n=[{key:"close",value:function(){x(B(u.prototype),"close",this).call(this),this.renderLoading(!1)}},{key:"setSubmitAction",value:function(e){this._handleFormSubmit=e}},{key:"renderLoading",value:function(e){e&&(this._submitButton.textContent="Guardando...",this._submitButton.classList.add("popup__btn_inactive"))}},{key:"setEventListeners",value:function(){var e=this;x(B(u.prototype),"setEventListeners",this).call(this),this._submitButton.addEventListener("click",(function(t){t.preventDefault(),e._handleFormSubmit(),e.renderLoading(!0)}))}}])&&D(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),u}(d),F=document.querySelector(".root").querySelector(".page"),N=F.querySelector(".profile__author"),G=F.querySelector(".profile__about-me"),J=(F.querySelector(".profile__container"),F.querySelector("#popup__avatar-image"),F.querySelector("#popup__profile-form")),H=F.querySelector("#popup__profile"),z=(J.querySelector("#name-input"),J.querySelector("#about-input"),H.querySelector(".popup__profile-close-btn"),F.querySelector(".profile__edit-btn")),M=H.querySelector(".popup__btn"),K=F.querySelector("#popup__places-form"),Q=F.querySelector("#popup__cards"),W=(Q.querySelector(".popup__places-close-btn"),F.querySelector(".profile__add-btn"));K.querySelector(".popup__place"),K.querySelector(".popup__url"),K.querySelector(".popup__btn"),F.querySelector("#image-popup"),document.querySelector(".profile__container").addEventListener("click",(function(){document.querySelector("#popup__avatar-image").classList.add("popup_opened")}));var X=new C({nameSelector:N,aboutSelector:G,avatarSelector:document.querySelector(".profile__photo")}),Y=new V({popupSelector:"#popup__delete",submitButton:document.querySelector(".popup__confirm-btn")}),Z=new g("#image-popup");Z.setEventListeners(),Y.setEventListeners();var $=new T({baseURL:"https://around.nomoreparties.co/v1/web_es_07",headers:{authorization:"b7e71284-4020-44f4-a80f-43722c5b3ece","Content-Type":"application/json"}}),ee=new P({popupSelector:"#popup__profile",submitCallback:function(e){$.editProfileInfo(e.name,e.about).then((function(e){X.setUserInfo({username:e.name,about:e.about}),ee.close()})).catch((function(e){return console.log(e)}))}});function te(e){var t=new r(e,"#element-template",{handleCardClick:function(e){var t=e.name,n=e.link;Z.open({name:t,link:n})},handleDeleteClick:function(e){var n=e.id;Y.open(),Y.setSubmitAction((function(){$.deleteCard(n).then((function(){Y.close(),t._trashBtn()})).catch((function(e){return console.log(e)}))}))},handleAddLike:function(e){var n=e.id;console.log(n),$.addLike(n).then((function(e){t.updateLikes(e.likes),t._addLike()})).catch((function(e){return console.log(e)}))},handleRemoveLike:function(e){var n=e.id;$.deleteLike(n).then((function(e){t.updateLikes(e.likes),t._removeLike()})).catch((function(e){return console.log(e)}))},userID:X.userID});return t.generateCard()}ee.setEventListeners(),$.getUserInfo().then((function(e){X.setUserInfo({username:e.name,about:e.about}),X.userID=e._id})).then((function(){$.getInitialCards().then((function(e){console.log(e);var t=new p({data:e,renderer:function(e){var n=te(e);t.addInitalItems(n)}},"#elements");t.renderedItems();var n=new P({popupSelector:"#popup__cards",submitCallback:function(e){$.addNewCard(e.name,e.popup__link).then((function(e){var r=te(e);t.addItems(r),n.close()})).catch((function(e){return console.log(e)}))}});n.setEventListeners()}))})),W.addEventListener("click",(function(){Q.classList.toggle("popup_opened")})),z.addEventListener("click",(function(){H.classList.add("popup_opened"),M.classList.add("popup__btn_inactive")})),new l(document).enableValidation()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QyxFQUFJc0IsY0FBY3RELE1BQUssU0FBQ0MsR0FDdEIyQixFQUFZUSxZQUFZLENBQUM3QyxTQUFVVSxFQUFJbEksS0FBTXNILE1BQU9ZLEVBQUlaLFFBRXhEdUMsRUFBWW5LLE9BQVN3SSxFQUFJL0gsR0FDM0IsSUFDQzhILE1BQUssV0FDSmdDLEVBQUl1QixrQkFBa0J2RCxNQUFLLFNBQUNDLEdBQzFCN0YsUUFBUUMsSUFBSTRGLEdBQ1osSUFBTXVELEVBQWMsSUFBSW5ILEVBQVEsQ0FDOUJwRixLQUFNZ0osRUFDTjFELFNBQVUsU0FBQ3RGLEdBQ1QsSUFBTXdNLEVBQWNsQixHQUFXdEwsR0FDL0J1TSxFQUFZRSxlQUFlRCxFQUM3QixHQUNDLGFBRUhELEVBQVlHLGdCQUVaLElBQU1DLEVBQVUsSUFBSTNGLEVBQWMsQ0FDaENsQixjQUFlLGdCQUNmbUIsZUFBZ0IsU0FBQ2pILEdBQ2YrSyxFQUNHNkIsV0FBVzVNLEVBQUtjLEtBQU1kLEVBQWtCLGFBQ3hDK0ksTUFBSyxTQUFDOEQsR0FDTCxJQUFNQyxFQUFpQnhCLEdBQVd1QixHQUNsQ04sRUFBWVEsU0FBU0QsR0FDckJILEVBQVF6RyxPQUNWLElBQ0NrRixPQUFNLFNBQUNDLEdBQUcsT0FBS2xJLFFBQVFDLElBQUlpSSxFQUFJLEdBQ3BDLElBR0ZzQixFQUFRN0IsbUJBRVYsR0FDRixJQThGQUosRUFBV3hILGlCQUFpQixTQUpBLFdBQzFCdUgsRUFBWTFILFVBQVVDLE9BQU8sZUFDL0IsSUFTQXNILEVBQWVwSCxpQkFBaUIsU0FMUCxXQUN2Qm1ILEVBQWF0SCxVQUFVUyxJQUFJLGdCQUMzQitHLEVBQWlCeEgsVUFBVVMsSUFBSSxzQkFDakMsSUFZbUIsSUFBSUUsRUFBYzVCLFVBRzFCa0wsa0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZWJfcHJvamVjdF80X2VzcC8uL3NyYy9jb21wb25lbnRzL0NhcmQuanMiLCJ3ZWJwYWNrOi8vd2ViX3Byb2plY3RfNF9lc3AvLi9zcmMvY29tcG9uZW50cy9Gb3JtVmFsaWRhdG9yLmpzIiwid2VicGFjazovL3dlYl9wcm9qZWN0XzRfZXNwLy4vc3JjL2NvbXBvbmVudHMvU2VjdGlvbi5qcyIsIndlYnBhY2s6Ly93ZWJfcHJvamVjdF80X2VzcC8uL3NyYy9jb21wb25lbnRzL1BvcHVwLmpzIiwid2VicGFjazovL3dlYl9wcm9qZWN0XzRfZXNwLy4vc3JjL2NvbXBvbmVudHMvUG9wdXBXaXRoSW1hZ2UuanMiLCJ3ZWJwYWNrOi8vd2ViX3Byb2plY3RfNF9lc3AvLi9zcmMvY29tcG9uZW50cy9Qb3B1cFdpdGhGb3JtLmpzIiwid2VicGFjazovL3dlYl9wcm9qZWN0XzRfZXNwLy4vc3JjL2NvbXBvbmVudHMvVXNlckluZm8uanMiLCJ3ZWJwYWNrOi8vd2ViX3Byb2plY3RfNF9lc3AvLi9zcmMvY29tcG9uZW50cy9BcGkuanMiLCJ3ZWJwYWNrOi8vd2ViX3Byb2plY3RfNF9lc3AvLi9zcmMvY29tcG9uZW50cy9Qb3B1cFdpdGhDb25maXJtYXRpb24uanMiLCJ3ZWJwYWNrOi8vd2ViX3Byb2plY3RfNF9lc3AvLi9zcmMvcGFnZS9pbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBjbGFzcyBDYXJkIHtcbiAgY29uc3RydWN0b3IoZGF0YSwgY2FyZFNlbGVjdG9yLCB7IGhhbmRsZUNhcmRDbGljaywgaGFuZGxlRGVsZXRlQ2xpY2ssIGhhbmRsZUFkZExpa2UsIGhhbmRsZVJlbW92ZUxpa2UsIHVzZXJJRCB9KSB7XG4gICAgdGhpcy5fbmFtZSA9IGRhdGEubmFtZTtcbiAgICB0aGlzLl9saW5rID0gZGF0YS5saW5rO1xuICAgIHRoaXMuX2lkID0gZGF0YS5faWQ7XG4gICAgdGhpcy5fbGlrZXNBcnJheSA9IGRhdGEubGlrZXM7XG4gICAgdGhpcy5fY2FyZExpa2VzID0gdGhpcy5fbGlrZXNBcnJheS5sZW5ndGg7XG4gICAgdGhpcy5fb3duZXJJZCA9IGRhdGEub3duZXIuX2lkO1xuXG4gICAgdGhpcy5fY2FyZFNlbGVjdG9yID0gY2FyZFNlbGVjdG9yO1xuXG4gICAgdGhpcy5faGFuZGxlQ2FyZENsaWNrID0gaGFuZGxlQ2FyZENsaWNrO1xuICAgIHRoaXMuX2hhbmRsZURlbGV0ZUNsaWNrID0gaGFuZGxlRGVsZXRlQ2xpY2s7XG4gICAgdGhpcy5faGFuZGxlQWRkTGlrZSA9IGhhbmRsZUFkZExpa2U7XG4gICAgdGhpcy5faGFuZGxlUmVtb3ZlTGlrZSA9IGhhbmRsZVJlbW92ZUxpa2U7XG5cbiAgICB0aGlzLl91c2VyID0gdXNlcklEO1xuXG4gICAgdGhpcy5faGVhcnRCdXR0b24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuZWxlbWVudF9faGVhcnQnKTtcbiAgfVxuXG4gIF9nZXRUZW1wbGF0ZSgpIHtcbiAgICBjb25zdCBjYXJkRWxlbWVudCA9IGRvY3VtZW50XG4gICAgICAucXVlcnlTZWxlY3Rvcih0aGlzLl9jYXJkU2VsZWN0b3IpXG4gICAgICAuY29udGVudFxuICAgICAgLnF1ZXJ5U2VsZWN0b3IoJy5lbGVtZW50JylcbiAgICAgIC5jbG9uZU5vZGUodHJ1ZSk7XG5cbiAgICByZXR1cm4gY2FyZEVsZW1lbnQ7XG4gIH1cblxuICBnZW5lcmF0ZUNhcmQoKSB7XG4gICAgdGhpcy5fZWxlbWVudCA9IHRoaXMuX2dldFRlbXBsYXRlKCk7XG4gICAgdGhpcy5fc2V0RXZlbnRMaXN0ZW5lcnMoKTtcblxuICAgIHRoaXMuX2VsZW1lbnQucXVlcnlTZWxlY3RvcignLmVsZW1lbnRfX25hbWUnKS50ZXh0Q29udGVudCA9IHRoaXMuX25hbWU7XG4gICAgdGhpcy5fZWxlbWVudC5xdWVyeVNlbGVjdG9yKCcuZWxlbWVudF9faW1hZ2UnKS5zcmMgPSB0aGlzLl9saW5rO1xuICAgIHRoaXMuX2VsZW1lbnQucXVlcnlTZWxlY3RvcignLmVsZW1lbnRfX2ltYWdlJykuYWx0ID0gYEltYWdlbiBkZSAke3RoaXMuX25hbWV9YDtcbiAgICB0aGlzLl9lbGVtZW50LnF1ZXJ5U2VsZWN0b3IoJy5lbGVtZW50X19saWtlLWNvdW50ZXInKS50ZXh0Q29udGVudCA9IHRoaXMuX2NhcmRMaWtlcyA/IHRoaXMuX2NhcmRMaWtlcyA6ICcnO1xuXG4gICAgY29uc3QgaGFzVXNlckxpa2VkID0gdGhpcy5fbGlrZXNBcnJheS5zb21lKChsaWtlKSA9PiBsaWtlLl9pZCA9PT0gdGhpcy5fdXNlcik7XG4gICAgdGhpcy5fZWxlbWVudC5xdWVyeVNlbGVjdG9yKCcuZWxlbWVudF9faGVhcnQnKS5jbGFzc0xpc3QudG9nZ2xlKCdlbGVtZW50X19oZWFydF9ibGFjaycsIGhhc1VzZXJMaWtlZCk7XG5cbiAgICByZXR1cm4gdGhpcy5fZWxlbWVudDtcbiAgfVxuXG4gIF9zZXRFdmVudExpc3RlbmVycygpIHtcbiAgICB0aGlzLl9lbGVtZW50LnF1ZXJ5U2VsZWN0b3IoJy5lbGVtZW50X19oZWFydCcpLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xuICAgICAgY29uc29sZS5sb2codGhpcy5faWQpO1xuICAgICAgY29uc3QgaGFzVXNlckxpa2VkID0gdGhpcy5fbGlrZXNBcnJheS5zb21lKChsaWtlKSA9PiBsaWtlLl9pZCA9PT0gdGhpcy5fdXNlcik7XG4gICAgICAgIGlmIChoYXNVc2VyTGlrZWQpIHtcbiAgICAgICAgICB0aGlzLl9oYW5kbGVSZW1vdmVMaWtlKHtpZDogdGhpcy5faWR9KTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICB0aGlzLl9oYW5kbGVBZGRMaWtlKHtpZDogdGhpcy5faWR9KTtcbiAgICAgICAgfVxuICAgIH0pO1xuXG4gICAgdGhpcy5fZWxlbWVudC5xdWVyeVNlbGVjdG9yKCcuZWxlbWVudF9faW1hZ2UnKS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcbiAgICAgIHRoaXMuX29wZW5JbWFnZVBvcHVwKCk7XG4gICAgfSk7XG5cbiAgICB0aGlzLl9lbGVtZW50LnF1ZXJ5U2VsZWN0b3IoJy5lbGVtZW50X190cmFzaCcpLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xuICAgICAgdGhpcy5faGFuZGxlRGVsZXRlQ2xpY2soe2lkOiB0aGlzLl9pZH0pO1xuICAgIH0pO1xuXG4gICAgaWYgKHRoaXMuX293bmVySWQgIT09IHRoaXMuX3VzZXIpIHtcbiAgICAgIHRoaXMuX2VsZW1lbnQucXVlcnlTZWxlY3RvcignLmVsZW1lbnRfX3RyYXNoJykucmVtb3ZlKCk7XG4gICAgfVxuICB9XG5cbiAgX2FkZExpa2UoKSB7XG4gICAgdGhpcy5fZWxlbWVudC5xdWVyeVNlbGVjdG9yKCcuZWxlbWVudF9faGVhcnQnKS5jbGFzc0xpc3QuYWRkKCdlbGVtZW50X19oZWFydF9ibGFjaycpO1xuICAgIHRoaXMuX2VsZW1lbnQucXVlcnlTZWxlY3RvcignLmVsZW1lbnRfX2xpa2UtY291bnRlcicpLnRleHRDb250ZW50ID0gdGhpcy5fbGlrZXNBcnJheS5sZW5ndGg7XG4gIH1cblxuICBfcmVtb3ZlTGlrZSgpIHtcbiAgICB0aGlzLl9lbGVtZW50LnF1ZXJ5U2VsZWN0b3IoJy5lbGVtZW50X19oZWFydCcpLmNsYXNzTGlzdC5yZW1vdmUoJ2VsZW1lbnRfX2hlYXJ0X2JsYWNrJyk7XG4gICAgdGhpcy5fZWxlbWVudC5xdWVyeVNlbGVjdG9yKCcuZWxlbWVudF9fbGlrZS1jb3VudGVyJykudGV4dENvbnRlbnQgPSB0aGlzLl9saWtlc0FycmF5Lmxlbmd0aDtcbiAgICBpZih0aGlzLl9jYXJkTGlrZXMgPT09ICcwJykge1xuICAgICAgdGhpcy5fZWxlbWVudC5xdWVyeVNlbGVjdG9yKCcuZWxlbWVudF9fbGlrZS1jb3VudGVyJykudGV4dENvbnRlbnQgPSAnJztcbiAgICB9XG4gIH1cblxuICB1cGRhdGVMaWtlcyA9IChyZXNBcnJheSkgPT4ge1xuICAgIHRoaXMuX2xpa2VzQXJyYXkgPSByZXNBcnJheTtcbiAgICByZXR1cm4gdGhpcy5fbGlrZXNBcnJheTtcbiAgfTtcblxuICBfdHJhc2hCdG4oKSB7XG4gICAgdGhpcy5fZWxlbWVudC5xdWVyeVNlbGVjdG9yKCcuZWxlbWVudF9fdHJhc2gnKS5jbG9zZXN0KCcuZWxlbWVudCcpLnJlbW92ZSgpO1xuICB9XG5cbiAgX29wZW5JbWFnZVBvcHVwKCkge1xuICAgIHRoaXMuX2hhbmRsZUNhcmRDbGljayh7bGluazogdGhpcy5fbGluaywgbmFtZTogdGhpcy5fbmFtZX0pO1xuICB9XG59IiwiZXhwb3J0IGRlZmF1bHQgY2xhc3MgRm9ybVZhbGlkYXRvciB7XG4gIGNvbnN0cnVjdG9yKHZhbGlkYXRpb24pIHtcbiAgICB0aGlzLl92YWxpZGF0aW9uID0gdmFsaWRhdGlvbjtcbiAgfVxuXG4gIF9zaG93SW5wdXRFcnJvciA9IChmb3JtRWxlbWVudCwgaW5wdXRFbGVtZW50LCBlcnJvck1lc3NhZ2UpID0+IHtcbiAgICBjb25zdCBlcnJvckVsZW1lbnQgPSBmb3JtRWxlbWVudC5xdWVyeVNlbGVjdG9yKGAuJHtpbnB1dEVsZW1lbnQuaWR9LWVycm9yYCk7XG4gICAgaW5wdXRFbGVtZW50LmNsYXNzTGlzdC5hZGQoJ2Zvcm1fX2lucHV0X3R5cGVfZXJyb3InKTtcbiAgICBlcnJvckVsZW1lbnQudGV4dENvbnRlbnQgPSBlcnJvck1lc3NhZ2U7XG4gICAgZXJyb3JFbGVtZW50LmNsYXNzTGlzdC5hZGQoJ2Zvcm1fX2lucHV0LWVycm9yX2FjdGl2ZScpO1xuICB9O1xuXG4gIF9oaWRlSW5wdXRFcnJvciA9IChmb3JtRWxlbWVudCwgaW5wdXRFbGVtZW50KSA9PiB7XG4gICAgY29uc3QgZXJyb3JFbGVtZW50ID0gZm9ybUVsZW1lbnQucXVlcnlTZWxlY3RvcihgLiR7aW5wdXRFbGVtZW50LmlkfS1lcnJvcmApO1xuICAgIGlucHV0RWxlbWVudC5jbGFzc0xpc3QucmVtb3ZlKCdmb3JtX19pbnB1dF90eXBlX2Vycm9yJyk7XG4gICAgZXJyb3JFbGVtZW50LmNsYXNzTGlzdC5yZW1vdmUoJ2Zvcm1fX2lucHV0LWVycm9yX2FjdGl2ZScpO1xuICAgIGVycm9yRWxlbWVudC50ZXh0Q29udGVudCA9ICcnO1xuICB9O1xuXG4gIF9jaGVja0lucHV0VmFsaWRpdHkgPSAoZm9ybUVsZW1lbnQsIGlucHV0RWxlbWVudCkgPT4ge1xuICAgIGlmICghaW5wdXRFbGVtZW50LnZhbGlkaXR5LnZhbGlkKSB7XG4gICAgICB0aGlzLl9zaG93SW5wdXRFcnJvcihmb3JtRWxlbWVudCwgaW5wdXRFbGVtZW50LCBpbnB1dEVsZW1lbnQudmFsaWRhdGlvbk1lc3NhZ2UpO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLl9oaWRlSW5wdXRFcnJvcihmb3JtRWxlbWVudCwgaW5wdXRFbGVtZW50KTtcbiAgICB9XG4gIH07XG5cbiAgX2hhc0ludmFsaWRJbnB1dCA9IChpbnB1dExpc3QpID0+IHtcbiAgICByZXR1cm4gaW5wdXRMaXN0LnNvbWUoKGlucHV0RWxlbWVudCkgPT4ge1xuICAgICAgcmV0dXJuICFpbnB1dEVsZW1lbnQudmFsaWRpdHkudmFsaWQ7XG4gICAgfSk7XG4gIH07XG5cbiAgX3RvZ2dsZUJ1dHRvblN0YXRlID0gKGlucHV0TGlzdCwgYnV0dG9uRWxlbWVudCkgPT4ge1xuICAgIGlmICh0aGlzLl9oYXNJbnZhbGlkSW5wdXQoaW5wdXRMaXN0KSkge1xuICAgICAgYnV0dG9uRWxlbWVudC5jbGFzc0xpc3QuYWRkKCdwb3B1cF9fYnRuX2luYWN0aXZlJyk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGJ1dHRvbkVsZW1lbnQuY2xhc3NMaXN0LnJlbW92ZSgncG9wdXBfX2J0bl9pbmFjdGl2ZScpO1xuICAgIH1cbiAgfVxuXG4gIF9zZXRFdmVudExpc3RlbmVycyA9IChmb3JtRWxlbWVudCkgPT4ge1xuICAgIGNvbnN0IGlucHV0TGlzdCA9IEFycmF5LmZyb20oZm9ybUVsZW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLmZvcm1fX2lucHV0JykpO1xuICAgIGNvbnN0IGJ1dHRvbkVsZW1lbnQgPSBmb3JtRWxlbWVudC5xdWVyeVNlbGVjdG9yKCcucG9wdXBfX2J0bicpO1xuXG4gICAgdGhpcy5fdG9nZ2xlQnV0dG9uU3RhdGUoaW5wdXRMaXN0LCBidXR0b25FbGVtZW50KTtcblxuICAgIGlucHV0TGlzdC5mb3JFYWNoKChpbnB1dEVsZW1lbnQpID0+IHtcbiAgICAgIGlucHV0RWxlbWVudC5hZGRFdmVudExpc3RlbmVyKCdpbnB1dCcsICgpID0+IHtcbiAgICAgICAgdGhpcy5fY2hlY2tJbnB1dFZhbGlkaXR5KGZvcm1FbGVtZW50LCBpbnB1dEVsZW1lbnQpO1xuICAgICAgICB0aGlzLl90b2dnbGVCdXR0b25TdGF0ZShpbnB1dExpc3QsIGJ1dHRvbkVsZW1lbnQpO1xuICAgICAgfSk7XG4gICAgfSk7XG4gIH1cblxuICBlbmFibGVWYWxpZGF0aW9uID0gKCkgPT4ge1xuICAgIGNvbnN0IGZvcm1MaXN0ID0gQXJyYXkuZnJvbShkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcuZm9ybScpKTtcblxuICAgIGZvcm1MaXN0LmZvckVhY2goKGZvcm1FbGVtZW50KSA9PiB7XG4gICAgICBjb25zdCBidXR0b25FbGVtZW50ID0gZm9ybUVsZW1lbnQucXVlcnlTZWxlY3RvcignLnBvcHVwX19idG4nKTtcbiAgICAgIGZvcm1FbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ3N1Ym1pdCcsIGZ1bmN0aW9uIChldnQpIHtcbiAgICAgICAgYnV0dG9uRWxlbWVudC5jbGFzc0xpc3QuYWRkKCdwb3B1cF9fYnRuX2luYWN0aXZlJyk7XG4gICAgICAgIGV2dC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgfSk7XG5cbiAgICAgIGNvbnN0IGZpZWxkc2V0TGlzdCA9IEFycmF5LmZyb20oZm9ybUVsZW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLmZvcm1fX3NldCcpKTtcblxuICAgICAgZmllbGRzZXRMaXN0LmZvckVhY2goKGZpZWxkc2V0KSA9PiB7XG4gICAgICAgIHRoaXMuX3NldEV2ZW50TGlzdGVuZXJzKGZpZWxkc2V0KTtcbiAgICAgIH0pO1xuICAgIH0pO1xuICB9XG59IiwiZXhwb3J0IGRlZmF1bHQgY2xhc3MgU2VjdGlvbiB7XG4gIGNvbnN0cnVjdG9yKHsgZGF0YSwgcmVuZGVyZXIgfSwgY29udGFpbmVyU2VsZWN0b3IpIHtcbiAgICB0aGlzLl9kYXRhQXJyYXkgPSBkYXRhO1xuICAgIHRoaXMucmVuZGVyZXIgPSByZW5kZXJlcjtcbiAgICB0aGlzLl9jb250YWluZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGNvbnRhaW5lclNlbGVjdG9yKTtcbiAgfVxuXG4gIHJlbmRlcmVkSXRlbXMoKSB7XG4gICAgdGhpcy5fZGF0YUFycmF5LmZvckVhY2goKGl0ZW0pID0+IHtcbiAgICAgIHRoaXMucmVuZGVyZXIoaXRlbSk7XG4gICAgfSk7XG4gIH1cblxuICBhZGRJbml0YWxJdGVtcyhlbGVtZW50KSB7XG4gICAgdGhpcy5fY29udGFpbmVyLmFwcGVuZChlbGVtZW50KTtcbiAgfVxuXG4gIGFkZEl0ZW1zKGVsZW1lbnQpIHtcbiAgICB0aGlzLl9jb250YWluZXIucHJlcGVuZChlbGVtZW50KTtcbiAgfVxufSIsImV4cG9ydCBkZWZhdWx0IGNsYXNzIFBvcHVwIHtcbiAgY29uc3RydWN0b3IocG9wdXBTZWxlY3Rvcikge1xuICAgIHRoaXMuX3BvcHVwRWxlbWVudCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IocG9wdXBTZWxlY3Rvcik7XG4gIH1cblxuICBvcGVuKCkge1xuICAgIHRoaXMuX3BvcHVwRWxlbWVudC5jbGFzc0xpc3QuYWRkKCdwb3B1cF9vcGVuZWQnKTtcbiAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdrZXlkb3duJywgdGhpcy5faGFuZGxlRXNjQ2xvc2UpO1xuICB9XG5cbiAgY2xvc2UoKSB7XG4gICAgdGhpcy5fcG9wdXBFbGVtZW50LmNsYXNzTGlzdC5yZW1vdmUoJ3BvcHVwX29wZW5lZCcpO1xuICAgIGRvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ2tleWRvd24nLCB0aGlzLl9oYW5kbGVFc2NDbG9zZSk7XG4gIH1cblxuICBfaGFuZGxlRXNjQ2xvc2UoZXZ0KSB7XG4gICAgaWYoZXZ0LmtleSA9PT0gJ0VzY2FwZScpIHtcbiAgICAgIHJldHVybiB0aGlzLmNsb3NlKCk7XG4gICAgfVxuICB9XG5cbiAgX2hhbmRsZU91dHNpZGVDbGljayhldnQpIHtcbiAgICBpZihldnQudGFyZ2V0LmNsYXNzTGlzdC5jb250YWlucygncG9wdXBfX3NlY3Rpb24nKSB8fCBldnQudGFyZ2V0LmNsYXNzTGlzdC5jb250YWlucygncG9wdXBfX2JhY2tncm91bmQnKSkge1xuICAgICAgdGhpcy5jbG9zZSgpO1xuICAgIH1cbiAgfVxuXG4gIHNldEV2ZW50TGlzdGVuZXJzKCkge1xuICAgIHRoaXMuX3BvcHVwRWxlbWVudC5xdWVyeVNlbGVjdG9yKCcucG9wdXBfX2Nsb3NlLWJ0bicpLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xuICAgICAgdGhpcy5jbG9zZSgpO1xuICAgIH0pXG5cbiAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdrZXlkb3duJywgKGV2dCkgPT4ge1xuICAgICAgdGhpcy5faGFuZGxlRXNjQ2xvc2UoZXZ0KTtcbiAgICB9KTtcblxuICAgIHRoaXMuX3BvcHVwRWxlbWVudC5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIChldnQpID0+IHtcbiAgICAgIHRoaXMuX2hhbmRsZU91dHNpZGVDbGljayhldnQpO1xuICAgIH0pO1xuICB9XG59IiwiaW1wb3J0IFBvcHVwIGZyb20gXCIuL1BvcHVwXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFBvcHVwV2l0aEltYWdlIGV4dGVuZHMgUG9wdXAge1xuICBjb25zdHJ1Y3Rvcihwb3B1cFNlbGVjdG9yKSB7XG4gICAgc3VwZXIocG9wdXBTZWxlY3Rvcik7XG4gICAgdGhpcy5fcG9wdXBJbWFnZSA9IHRoaXMuX3BvcHVwRWxlbWVudC5xdWVyeVNlbGVjdG9yKCcuaW1hZ2UtcG9wdXBfX2ltYWdlJyk7XG4gICAgdGhpcy5fcG9wdXBUaXRsZSA9IHRoaXMuX3BvcHVwRWxlbWVudC5xdWVyeVNlbGVjdG9yKCcuaW1hZ2UtcG9wdXBfX3RpdGxlJyk7XG4gIH1cblxuICBvcGVuKHtsaW5rLCBuYW1lfSkge1xuICAgIHN1cGVyLm9wZW4oKTtcbiAgICB0aGlzLl9wb3B1cEltYWdlLnNyYyA9IGxpbms7XG4gICAgdGhpcy5fcG9wdXBJbWFnZS5hbHQgPSBgSW1hZ2VuIGRlICR7bmFtZX1gO1xuICAgIHRoaXMuX3BvcHVwVGl0bGUudGV4dENvbnRlbnQgPSBuYW1lO1xuICAgIHN1cGVyLnNldEV2ZW50TGlzdGVuZXJzKCk7XG4gIH1cbn0iLCJpbXBvcnQgUG9wdXAgZnJvbSBcIi4vUG9wdXBcIjtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUG9wdXBXaXRoRm9ybSBleHRlbmRzIFBvcHVwIHtcbiAgY29uc3RydWN0b3IoeyBwb3B1cFNlbGVjdG9yLCBzdWJtaXRDYWxsYmFjayB9KSB7XG4gICAgc3VwZXIocG9wdXBTZWxlY3Rvcik7XG4gICAgdGhpcy5fZm9ybSA9IHRoaXMuX3BvcHVwRWxlbWVudC5xdWVyeVNlbGVjdG9yKCcuZm9ybScpO1xuICAgIHRoaXMuX2J1dHRvblN1Ym1pdCA9IHRoaXMuX3BvcHVwRWxlbWVudC5xdWVyeVNlbGVjdG9yKCcucG9wdXBfX2J0bicpXG4gICAgdGhpcy5faGFuZGxlRm9ybVN1Ym1pdCA9IHN1Ym1pdENhbGxiYWNrO1xuICB9XG5cbiAgX2dldElucHV0VmFsdWVzKCkge1xuICAgIHRoaXMuX2lucHV0TGlzdCA9IHRoaXMuX2Zvcm0ucXVlcnlTZWxlY3RvckFsbCgnLmZvcm1fX2lucHV0Jyk7XG4gICAgdGhpcy5mb3JtVmFsdWVzID0ge307XG4gICAgdGhpcy5faW5wdXRMaXN0LmZvckVhY2goKGlucHV0KSA9PiB7XG4gICAgICB0aGlzLmZvcm1WYWx1ZXNbaW5wdXQubmFtZV0gPSBpbnB1dC52YWx1ZTtcbiAgICB9KTtcbiAgICByZXR1cm4gdGhpcy5mb3JtVmFsdWVzO1xuICB9XG5cbiAgc2V0RXZlbnRMaXN0ZW5lcnMoKSB7XG4gICAgc3VwZXIuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcbiAgICB0aGlzLl9mb3JtLmFkZEV2ZW50TGlzdGVuZXIoJ3N1Ym1pdCcsIChldnQpID0+IHtcbiAgICAgIGV2dC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgdGhpcy5faGFuZGxlRm9ybVN1Ym1pdCh0aGlzLl9nZXRJbnB1dFZhbHVlcygpKTtcbiAgICAgIHRoaXMuY2xvc2UoKTtcbiAgICB9KTtcbiAgfVxuXG4gIGNsb3NlKCkge1xuICAgIHN1cGVyLmNsb3NlKCk7XG4gICAgdGhpcy5fZm9ybS5yZXNldCgpO1xuICAgIHRoaXMuX3BvcHVwRWxlbWVudC5xdWVyeVNlbGVjdG9yKCcucG9wdXBfX2J0bicpLmNsYXNzTGlzdC5hZGQoJ3BvcHVwX19idG5faW5hY3RpdmUnKTtcbiAgfVxufSIsImV4cG9ydCBkZWZhdWx0IGNsYXNzIFVzZXJJbmZvIHtcbiAgY29uc3RydWN0b3IoeyBuYW1lU2VsZWN0b3IsIGFib3V0U2VsZWN0b3IsIGF2YXRhclNlbGVjdG9yLCB1c2VySUQgfSkge1xuICAgIHRoaXMuX3VzZXJuYW1lID0gbmFtZVNlbGVjdG9yO1xuICAgIHRoaXMuX2Fib3V0ID0gYWJvdXRTZWxlY3RvcjtcbiAgICB0aGlzLl9hdmF0YXJTZWxlY3RvciA9ICBhdmF0YXJTZWxlY3RvcjtcbiAgICB0aGlzLl91c2VySUQgPSB1c2VySUQ7XG5cbiAgICB0aGlzLl9uYW1lSW5wdXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjbmFtZS1pbnB1dCcpO1xuICAgIHRoaXMuX2Fib3V0SW5wdXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjYWJvdXQtaW5wdXQnKTtcbiAgfVxuXG4gIGdldFVzZXJJbmZvKCkge1xuICAgIHJldHVybiB7XG4gICAgICBuYW1lOiB0aGlzLl9uYW1lSW5wdXQudGV4dENvbnRlbnQsXG4gICAgICBhYm91dDogdGhpcy5fam9iSW5wdXQudGV4dENvbnRlbnRcbiAgICB9O1xuICB9XG5cbiAgc2V0VXNlckluZm8oZGF0YSkge1xuICAgIGNvbnN0IHt1c2VybmFtZSwgYWJvdXR9ID0gZGF0YVxuICAgIHRoaXMuX3VzZXJuYW1lLnRleHRDb250ZW50ID0gdXNlcm5hbWU7XG4gICAgdGhpcy5fYWJvdXQudGV4dENvbnRlbnQgPSBhYm91dDtcbiAgfVxuXG4gIHNldFVzZXJBdmF0YXIoYXZhdGFyKSB7XG4gICAgdGhpcy5fYXZhdGFyU2VsZWN0b3Iuc3JjID0gYXZhdGFyXG4gIH1cbn0iLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBBcGkge1xuICBjb25zdHJ1Y3Rvcih7YmFzZVVSTCwgaGVhZGVyc30pIHtcbiAgICB0aGlzLl9iYXNlVVJMID0gYmFzZVVSTDtcbiAgICB0aGlzLl9oZWFkZXJzID0gaGVhZGVycztcbiAgfVxuXG4gIGdldEluaXRpYWxDYXJkcygpIHtcbiAgICByZXR1cm4gZmV0Y2goYCR7dGhpcy5fYmFzZVVSTH0vY2FyZHNgLCB7XG4gICAgICBtZXRob2Q6IFwiR0VUXCIsXG4gICAgICBoZWFkZXJzOiB0aGlzLl9oZWFkZXJzXG4gICAgfSlcbiAgICAgIC50aGVuKChyZXMpID0+IHtcbiAgICAgICAgaWYocmVzLm9rKSB7XG4gICAgICAgICAgcmV0dXJuIHJlcy5qc29uKCk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIFByb21pc2UucmVqZWN0KGBFcnJvcjogJHtyZXMuc3RhdHVzfWApO1xuICAgICAgfSk7XG4gIH1cblxuICBhZGROZXdDYXJkKG5hbWUsIGxpbmspIHtcbiAgICByZXR1cm4gZmV0Y2goYCR7dGhpcy5fYmFzZVVSTH0vY2FyZHNgLCB7XG4gICAgICBtZXRob2Q6IFwiUE9TVFwiLFxuICAgICAgaGVhZGVyczogdGhpcy5faGVhZGVycyxcbiAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHtcbiAgICAgICAgbmFtZTogbmFtZSxcbiAgICAgICAgbGluazogbGlua1xuICAgICAgfSlcbiAgICB9KVxuICAgICAgLnRoZW4oKHJlcykgPT4ge1xuICAgICAgICBpZihyZXMub2spIHtcbiAgICAgICAgICByZXR1cm4gcmVzLmpzb24oKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QoYEVycm9yOiAke3Jlcy5zdGF0dXN9YCk7XG4gICAgICB9KTtcbiAgfVxuXG4gIGRlbGV0ZUNhcmQoY2FyZElEKSB7XG4gICAgcmV0dXJuIGZldGNoKGAke3RoaXMuX2Jhc2VVUkx9L2NhcmRzLyR7Y2FyZElEfWAsIHtcbiAgICAgIG1ldGhvZDogXCJERUxFVEVcIixcbiAgICAgIGhlYWRlcnM6IHRoaXMuX2hlYWRlcnMsXG4gICAgfSlcbiAgICAgIC50aGVuKChyZXMpID0+IHtcbiAgICAgICAgaWYocmVzLm9rKSB7XG4gICAgICAgICAgcmV0dXJuIHJlcy5qc29uKCk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIFByb21pc2UucmVqZWN0KGBFcnJvcjogJHtyZXMuc3RhdHVzfWApO1xuICAgICAgfSk7XG4gIH1cblxuICBnZXRVc2VySW5mbygpIHtcbiAgICByZXR1cm4gZmV0Y2goYCR7dGhpcy5fYmFzZVVSTH0vdXNlcnMvbWVgLCB7XG4gICAgICBtZXRob2Q6IFwiR0VUXCIsXG4gICAgICBoZWFkZXJzOiB0aGlzLl9oZWFkZXJzXG4gICAgfSlcbiAgICAgIC50aGVuKChyZXMpID0+IHtcbiAgICAgICAgaWYocmVzLm9rKSB7XG4gICAgICAgICAgcmV0dXJuIHJlcy5qc29uKCk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIFByb21pc2UucmVqZWN0KGBFcnJvcjogJHtyZXMuc3RhdHVzfWApO1xuICAgICAgfSk7XG4gIH1cblxuICBlZGl0UHJvZmlsZUluZm8obmFtZSwgYWJvdXQpIHtcbiAgICByZXR1cm4gZmV0Y2goYCR7dGhpcy5fYmFzZVVSTH0vdXNlcnMvbWVgLCB7XG4gICAgICBtZXRob2Q6IFwiUEFUQ0hcIixcbiAgICAgIGhlYWRlcnM6IHRoaXMuX2hlYWRlcnMsXG4gICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7XG4gICAgICAgIG5hbWU6IG5hbWUsXG4gICAgICAgIGFib3V0OiBhYm91dFxuICAgICAgfSlcbiAgICB9KVxuICAgICAgLnRoZW4oKHJlcykgPT4ge1xuICAgICAgICBpZihyZXMub2spIHtcbiAgICAgICAgICByZXR1cm4gcmVzLmpzb24oKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QoYEVycm9yOiAke3Jlcy5zdGF0dXN9YCk7XG4gICAgICB9KTtcbiAgfVxuXG4gIGFkZExpa2UoY2FyZElEKSB7XG4gICAgcmV0dXJuIGZldGNoKGAke3RoaXMuX2Jhc2VVUkx9L2xpa2VzLyR7Y2FyZElEfWAsIHtcbiAgICAgIG1ldGhvZDogXCJQVVRcIixcbiAgICAgIGhlYWRlcnM6IHRoaXMuX2hlYWRlcnNcbiAgICB9KVxuICAgICAgLnRoZW4oKHJlcykgPT4ge1xuICAgICAgICBpZihyZXMub2spIHtcbiAgICAgICAgICByZXR1cm4gcmVzLmpzb24oKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QoYEVycm9yOiAke3Jlcy5zdGF0dXN9YCk7XG4gICAgICB9KTtcbiAgfVxuXG4gIGRlbGV0ZUxpa2UoY2FyZElEKSB7XG4gICAgcmV0dXJuIGZldGNoKGAke3RoaXMuX2Jhc2VVUkx9L2xpa2VzLyR7Y2FyZElEfWAsIHtcbiAgICAgIG1ldGhvZDogXCJERUxFVEVcIixcbiAgICAgIGhlYWRlcnM6IHRoaXMuX2hlYWRlcnNcbiAgICB9KVxuICAgICAgLnRoZW4oKHJlcykgPT4ge1xuICAgICAgICBpZihyZXMub2spIHtcbiAgICAgICAgICByZXR1cm4gcmVzLmpzb24oKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QoYEVycm9yOiAke3Jlcy5zdGF0dXN9YCk7XG4gICAgICB9KTtcbiAgfVxuXG4gIGF2YXRhckltYWdlKGxpbmspIHtcbiAgICByZXR1cm4gZmV0Y2goYCR7dGhpcy5fYmFzZVVSTH0vdXNlcnMvbWUvYXZhdGFyYCwge1xuICAgICAgbWV0aG9kOiBcIlBBVENIXCIsXG4gICAgICBoZWFkZXJzOiB0aGlzLl9oZWFkZXJzLFxuICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoe1xuICAgICAgICBhdmF0YXI6IGxpbmtcbiAgICAgIH0pXG4gICAgfSlcbiAgICAgIC50aGVuKChyZXMpID0+IHtcbiAgICAgICAgaWYocmVzLm9rKSB7XG4gICAgICAgICAgcmV0dXJuIHJlcy5qc29uKCk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIFByb21pc2UucmVqZWN0KGBFcnJvcjogJHtyZXMuc3RhdHVzfWApO1xuICAgICAgfSk7XG4gIH1cbn0iLCJpbXBvcnQgUG9wdXAgZnJvbSBcIi4vUG9wdXBcIjtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUG9wdXBXaXRoQ29uZmlybWF0aW9uIGV4dGVuZHMgUG9wdXB7XG4gIGNvbnN0cnVjdG9yKHtwb3B1cFNlbGVjdG9yLCBoYW5kbGVGb3JtU3VibWl0LCBzdWJtaXRCdXR0b259KSB7XG4gICAgc3VwZXIocG9wdXBTZWxlY3Rvcik7XG4gICAgdGhpcy5faGFuZGxlRm9ybVN1Ym1pdCA9IGhhbmRsZUZvcm1TdWJtaXQ7XG4gICAgdGhpcy5fc3VibWl0QnV0dG9uID0gc3VibWl0QnV0dG9uO1xuICB9XG5cbiAgY2xvc2UoKSB7XG4gICAgc3VwZXIuY2xvc2UoKTtcbiAgICB0aGlzLnJlbmRlckxvYWRpbmcoZmFsc2UpO1xuICB9XG5cbiAgc2V0U3VibWl0QWN0aW9uKGFjdGlvbikge1xuICAgIHRoaXMuX2hhbmRsZUZvcm1TdWJtaXQgPSBhY3Rpb247XG4gIH1cblxuICByZW5kZXJMb2FkaW5nKGlzTG9hZGluZykge1xuICAgIGlmIChpc0xvYWRpbmcpIHtcbiAgICAgIHRoaXMuX3N1Ym1pdEJ1dHRvbi50ZXh0Q29udGVudCA9ICdHdWFyZGFuZG8uLi4nO1xuICAgICAgdGhpcy5fc3VibWl0QnV0dG9uLmNsYXNzTGlzdC5hZGQoJ3BvcHVwX19idG5faW5hY3RpdmUnKVxuICAgIH0gLyplbHNlIHtcbiAgICAgIHRoaXMuX3N1Ym1pdEJ1dHRvbi50ZXh0Q29udGVudCA9IHRoaXMuX3N1Ym1pdEJ1dHRvbi5kYXRhc2V0LnRleHRjb250ZW50O1xuICAgIH0qL1xuICB9XG5cbiAgc2V0RXZlbnRMaXN0ZW5lcnMoKSB7XG4gICAgc3VwZXIuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcbiAgICB0aGlzLl9zdWJtaXRCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoZXZ0KSA9PiB7XG4gICAgICBldnQucHJldmVudERlZmF1bHQoKTtcbiAgICAgIHRoaXMuX2hhbmRsZUZvcm1TdWJtaXQoKTtcbiAgICAgIHRoaXMucmVuZGVyTG9hZGluZyh0cnVlKTtcbiAgICB9KTtcbiAgfVxufSIsImltcG9ydCAnLi9pbmRleC5jc3MnO1xuXG5pbXBvcnQgQ2FyZCBmcm9tICcuLi9jb21wb25lbnRzL0NhcmQuanMnO1xuaW1wb3J0IEZvcm1WYWxpZGF0b3IgZnJvbSAnLi4vY29tcG9uZW50cy9Gb3JtVmFsaWRhdG9yLmpzJztcbmltcG9ydCBTZWN0aW9uIGZyb20gJy4uL2NvbXBvbmVudHMvU2VjdGlvbic7XG5pbXBvcnQgUG9wdXBXaXRoSW1hZ2UgZnJvbSAnLi4vY29tcG9uZW50cy9Qb3B1cFdpdGhJbWFnZSc7XG5pbXBvcnQgUG9wdXBXaXRoRm9ybSBmcm9tICcuLi9jb21wb25lbnRzL1BvcHVwV2l0aEZvcm0nO1xuaW1wb3J0IFVzZXJJbmZvIGZyb20gJy4uL2NvbXBvbmVudHMvVXNlckluZm8nO1xuaW1wb3J0IEFwaSBmcm9tICcuLi9jb21wb25lbnRzL0FwaSc7XG5pbXBvcnQgUG9wdXBXaXRoQ29uZmlybWF0aW9uIGZyb20gJy4uL2NvbXBvbmVudHMvUG9wdXBXaXRoQ29uZmlybWF0aW9uJztcblxuLy9HZW5lcmFsXG5jb25zdCByb290RWxlbWVudCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5yb290Jyk7XG5jb25zdCBwYWdlQ29udGFpbmVyID0gcm9vdEVsZW1lbnQucXVlcnlTZWxlY3RvcignLnBhZ2UnKTtcblxuLy9Qcm9maWxlIGNvbnRhaW5lclxuZXhwb3J0IGNvbnN0IHByb2ZpbGVBdXRob3IgPSBwYWdlQ29udGFpbmVyLnF1ZXJ5U2VsZWN0b3IoJy5wcm9maWxlX19hdXRob3InKTtcbmV4cG9ydCBjb25zdCBwcm9maWxlQWJvdXQgPSBwYWdlQ29udGFpbmVyLnF1ZXJ5U2VsZWN0b3IoJy5wcm9maWxlX19hYm91dC1tZScpO1xuY29uc3QgcHJvZmlsZUF2YXRhckNvbnRhaW5lciA9IHBhZ2VDb250YWluZXIucXVlcnlTZWxlY3RvcignLnByb2ZpbGVfX2NvbnRhaW5lcicpO1xuY29uc3QgcHJvZmlsZUF2YXRhciA9IHBhZ2VDb250YWluZXIucXVlcnlTZWxlY3RvcignI3BvcHVwX19hdmF0YXItaW1hZ2UnKVxuXG4vLyBQb3B1cCBwcm9maWxlXG5jb25zdCBwcm9maWxlQ29udGFpbmVyID0gcGFnZUNvbnRhaW5lci5xdWVyeVNlbGVjdG9yKCcjcG9wdXBfX3Byb2ZpbGUtZm9ybScpO1xuZXhwb3J0IGNvbnN0IHBvcHVwUHJvZmlsZSA9IHBhZ2VDb250YWluZXIucXVlcnlTZWxlY3RvcignI3BvcHVwX19wcm9maWxlJyk7XG5leHBvcnQgY29uc3QgaW5wdXRQcm9maWxlTmFtZSA9IHByb2ZpbGVDb250YWluZXIucXVlcnlTZWxlY3RvcignI25hbWUtaW5wdXQnKTtcbmV4cG9ydCBjb25zdCBpbnB1dFByb2ZpbGVBYm91dCA9IHByb2ZpbGVDb250YWluZXIucXVlcnlTZWxlY3RvcignI2Fib3V0LWlucHV0Jyk7XG5leHBvcnQgY29uc3QgY2xvc2VQcm9maWxlQnRuID0gcG9wdXBQcm9maWxlLnF1ZXJ5U2VsZWN0b3IoJy5wb3B1cF9fcHJvZmlsZS1jbG9zZS1idG4nKTtcbmV4cG9ydCBjb25zdCBlZGl0UHJvZmlsZUJ0biA9IHBhZ2VDb250YWluZXIucXVlcnlTZWxlY3RvcignLnByb2ZpbGVfX2VkaXQtYnRuJyk7XG5leHBvcnQgY29uc3Qgc3VibWl0UHJvZmlsZUJ0biA9IHBvcHVwUHJvZmlsZS5xdWVyeVNlbGVjdG9yKCcucG9wdXBfX2J0bicpO1xuXG4vLyBQb3B1cCBwbGFjZVxuZXhwb3J0IGNvbnN0IHBsYWNlc0NvbnRhaW5lciA9IHBhZ2VDb250YWluZXIucXVlcnlTZWxlY3RvcignI3BvcHVwX19wbGFjZXMtZm9ybScpO1xuZXhwb3J0IGNvbnN0IHBvcHVwUGxhY2VzID0gcGFnZUNvbnRhaW5lci5xdWVyeVNlbGVjdG9yKCcjcG9wdXBfX2NhcmRzJyk7XG5leHBvcnQgY29uc3QgY2xvc2VQbGFjZXNCdG4gPSBwb3B1cFBsYWNlcy5xdWVyeVNlbGVjdG9yKCcucG9wdXBfX3BsYWNlcy1jbG9zZS1idG4nKTtcbmV4cG9ydCBjb25zdCBhZGRDYXJkQnRuID0gcGFnZUNvbnRhaW5lci5xdWVyeVNlbGVjdG9yKCcucHJvZmlsZV9fYWRkLWJ0bicpO1xuZXhwb3J0IGNvbnN0IGlucHV0UGxhY2VOYW1lID0gcGxhY2VzQ29udGFpbmVyLnF1ZXJ5U2VsZWN0b3IoJy5wb3B1cF9fcGxhY2UnKTtcbmV4cG9ydCBjb25zdCBpbnB1dFBsYWNlTGluayA9IHBsYWNlc0NvbnRhaW5lci5xdWVyeVNlbGVjdG9yKCcucG9wdXBfX3VybCcpO1xuY29uc3Qgc3VibWl0UGxhY2VzQnRuID0gcGxhY2VzQ29udGFpbmVyLnF1ZXJ5U2VsZWN0b3IoJy5wb3B1cF9fYnRuJyk7XG5cbi8vIFBvcHVwIGltYWdlXG5leHBvcnQgY29uc3QgcG9wdXBJbWFnZSA9IHBhZ2VDb250YWluZXIucXVlcnlTZWxlY3RvcignI2ltYWdlLXBvcHVwJyk7XG5cbmRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5wcm9maWxlX19jb250YWluZXInKS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcbiAgY29uc3QgcHJ1ZWJhID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI3BvcHVwX19hdmF0YXItaW1hZ2UnKTtcbiAgcHJ1ZWJhLmNsYXNzTGlzdC5hZGQoJ3BvcHVwX29wZW5lZCcpO1xufSlcblxuLy8gSW5pdGlhbCBjYXJkc1xuY29uc3QgaW5pdGlhbENhcmRzID0gW1xuICB7XG4gICAgbmFtZTogJ1ZhbGxlIGRlIFlvc2VtaXRlJyxcbiAgICBsaW5rOiAnaHR0cHM6Ly9wcmFjdGljdW0tY29udGVudC5zMy51cy13ZXN0LTEuYW1hem9uYXdzLmNvbS9uZXctbWFya2V0cy9XRUJfc3ByaW50XzUvRVMveW9zZW1pdGUuanBnJ1xuICB9LFxuICB7XG4gICAgbmFtZTogJ0xhZ28gTG91aXNlJyxcbiAgICBsaW5rOiAnaHR0cHM6Ly9wcmFjdGljdW0tY29udGVudC5zMy51cy13ZXN0LTEuYW1hem9uYXdzLmNvbS9uZXctbWFya2V0cy9XRUJfc3ByaW50XzUvRVMvbGFrZS1sb3Vpc2UuanBnJ1xuICB9LFxuICB7XG4gICAgbmFtZTogJ01vbnRhw7FhcyBDYWx2YXMnLFxuICAgIGxpbms6ICdodHRwczovL3ByYWN0aWN1bS1jb250ZW50LnMzLnVzLXdlc3QtMS5hbWF6b25hd3MuY29tL25ldy1tYXJrZXRzL1dFQl9zcHJpbnRfNS9FUy9iYWxkLW1vdW50YWlucy5qcGcnXG4gIH0sXG4gIHtcbiAgICBuYW1lOiAnTGF0ZW1hcicsXG4gICAgbGluazogJ2h0dHBzOi8vcHJhY3RpY3VtLWNvbnRlbnQuczMudXMtd2VzdC0xLmFtYXpvbmF3cy5jb20vbmV3LW1hcmtldHMvV0VCX3NwcmludF81L0VTL2xhdGVtYXIuanBnJ1xuICB9LFxuICB7XG4gICAgbmFtZTogJ1BhcnF1ZSBOYWNpb25hbCBkZSBsYSBWYW5vaXNlJyxcbiAgICBsaW5rOiAnaHR0cHM6Ly9wcmFjdGljdW0tY29udGVudC5zMy51cy13ZXN0LTEuYW1hem9uYXdzLmNvbS9uZXctbWFya2V0cy9XRUJfc3ByaW50XzUvRVMvdmFub2lzZS5qcGcnXG4gIH0sXG4gIHtcbiAgICBuYW1lOiAnTGFnbyBkaSBCcmFpZXMnLFxuICAgIGxpbms6ICdodHRwczovL3ByYWN0aWN1bS1jb250ZW50LnMzLnVzLXdlc3QtMS5hbWF6b25hd3MuY29tL25ldy1tYXJrZXRzL1dFQl9zcHJpbnRfNS9FUy9sYWdvLmpwZydcbiAgfVxuXTtcblxuLy8gTnVldm8gQ29kaWdvXG5jb25zdCBwcm9maWxlSW5mbyA9IG5ldyBVc2VySW5mbyh7XG4gIG5hbWVTZWxlY3RvcjogcHJvZmlsZUF1dGhvcixcbiAgYWJvdXRTZWxlY3RvcjogcHJvZmlsZUFib3V0LFxuICBhdmF0YXJTZWxlY3RvcjogZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnByb2ZpbGVfX3Bob3RvJylcbn0pO1xuXG5jb25zdCByZW1vdmVDYXJkID0gbmV3IFBvcHVwV2l0aENvbmZpcm1hdGlvbih7XG4gIHBvcHVwU2VsZWN0b3I6ICcjcG9wdXBfX2RlbGV0ZScsXG4gIHN1Ym1pdEJ1dHRvbjogZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnBvcHVwX19jb25maXJtLWJ0bicpXG59KTtcblxuY29uc3QgaW1hZ2VQb3B1cCA9IG5ldyBQb3B1cFdpdGhJbWFnZSgnI2ltYWdlLXBvcHVwJyk7XG5pbWFnZVBvcHVwLnNldEV2ZW50TGlzdGVuZXJzKCk7XG5cbnJlbW92ZUNhcmQuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcblxuY29uc3QgYXBpID0gbmV3IEFwaSh7XG4gIGJhc2VVUkw6ICdodHRwczovL2Fyb3VuZC5ub21vcmVwYXJ0aWVzLmNvL3YxL3dlYl9lc18wNycsXG4gIGhlYWRlcnM6IHtcbiAgICBhdXRob3JpemF0aW9uOiAnYjdlNzEyODQtNDAyMC00NGY0LWE4MGYtNDM3MjJjNWIzZWNlJyxcbiAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nXG4gIH1cbn0pO1xuXG5jb25zdCBlZGl0UHJvZmlsZSA9IG5ldyBQb3B1cFdpdGhGb3JtKHtcbiAgcG9wdXBTZWxlY3RvcjogJyNwb3B1cF9fcHJvZmlsZScsXG4gIHN1Ym1pdENhbGxiYWNrOiAoZGF0YSkgPT4ge1xuICAgIGFwaVxuICAgICAgLmVkaXRQcm9maWxlSW5mbyhkYXRhLm5hbWUsIGRhdGEuYWJvdXQpXG4gICAgICAudGhlbigocmVzKSA9PiB7XG4gICAgICAgIHByb2ZpbGVJbmZvLnNldFVzZXJJbmZvKHt1c2VybmFtZTogcmVzLm5hbWUsIGFib3V0OiByZXMuYWJvdXR9KTtcbiAgICAgICAgZWRpdFByb2ZpbGUuY2xvc2UoKVxuICAgIH0pXG4gICAgLmNhdGNoKChlcnIpID0+IGNvbnNvbGUubG9nKGVycikpXG4gIH1cbn0pO1xuZWRpdFByb2ZpbGUuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcblxuYXBpLmdldFVzZXJJbmZvKCkudGhlbigocmVzKSA9PiB7XG4gIHByb2ZpbGVJbmZvLnNldFVzZXJJbmZvKHt1c2VybmFtZTogcmVzLm5hbWUsIGFib3V0OiByZXMuYWJvdXR9KTtcbiAgLypwcm9maWxlSW5mby5zZXRVc2VyQXZhdGFyKHJlcy5hdmF0YXIpOyovXG4gIHByb2ZpbGVJbmZvLnVzZXJJRCA9IHJlcy5faWQ7XG59KVxuLnRoZW4oKCkgPT4ge1xuICBhcGkuZ2V0SW5pdGlhbENhcmRzKCkudGhlbigocmVzKSA9PiB7XG4gICAgY29uc29sZS5sb2cocmVzKVxuICAgIGNvbnN0IGNhcmRTZWN0aW9uID0gbmV3IFNlY3Rpb24oe1xuICAgICAgZGF0YTogcmVzLFxuICAgICAgcmVuZGVyZXI6IChkYXRhKSA9PiB7XG4gICAgICAgIGNvbnN0IGNhcmRFbGVtZW50ID0gY3JlYXRlQ2FyZChkYXRhKTtcbiAgICAgICAgY2FyZFNlY3Rpb24uYWRkSW5pdGFsSXRlbXMoY2FyZEVsZW1lbnQpO1xuICAgICAgfVxuICAgIH0sICcjZWxlbWVudHMnKVxuXG4gICAgY2FyZFNlY3Rpb24ucmVuZGVyZWRJdGVtcygpO1xuXG4gICAgY29uc3QgYWRkQ2FyZCA9IG5ldyBQb3B1cFdpdGhGb3JtKHtcbiAgICAgIHBvcHVwU2VsZWN0b3I6ICcjcG9wdXBfX2NhcmRzJyxcbiAgICAgIHN1Ym1pdENhbGxiYWNrOiAoZGF0YSkgPT4ge1xuICAgICAgICBhcGlcbiAgICAgICAgICAuYWRkTmV3Q2FyZChkYXRhLm5hbWUsIGRhdGFbJ3BvcHVwX19saW5rJ10pXG4gICAgICAgICAgLnRoZW4oKGNhcmQpID0+IHtcbiAgICAgICAgICAgIGNvbnN0IG5ld0NhcmRFbGVtZW50ID0gY3JlYXRlQ2FyZChjYXJkKTtcbiAgICAgICAgICAgIGNhcmRTZWN0aW9uLmFkZEl0ZW1zKG5ld0NhcmRFbGVtZW50KTtcbiAgICAgICAgICAgIGFkZENhcmQuY2xvc2UoKTtcbiAgICAgICAgICB9KVxuICAgICAgICAgIC5jYXRjaCgoZXJyKSA9PiBjb25zb2xlLmxvZyhlcnIpKTtcbiAgICAgIH1cbiAgICB9KTtcblxuICAgIGFkZENhcmQuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcblxuICB9KVxufSlcblxuZnVuY3Rpb24gY3JlYXRlQ2FyZChkYXRhKSB7XG4gIGNvbnN0IG5ld0NhcmQgPSBuZXcgQ2FyZChkYXRhICwgJyNlbGVtZW50LXRlbXBsYXRlJywge1xuICAgIGhhbmRsZUNhcmRDbGljazooe25hbWUsIGxpbmt9KSA9PiB7XG4gICAgICBpbWFnZVBvcHVwLm9wZW4oe25hbWUsIGxpbmt9KVxuICAgIH0sXG4gICAgaGFuZGxlRGVsZXRlQ2xpY2s6ICh7aWR9KSA9PiB7XG4gICAgICByZW1vdmVDYXJkLm9wZW4oKTtcbiAgICAgIHJlbW92ZUNhcmQuc2V0U3VibWl0QWN0aW9uKCgpID0+IHtcbiAgICAgICAgYXBpLmRlbGV0ZUNhcmQoaWQpLnRoZW4oKCkgPT4ge1xuICAgICAgICAgIHJlbW92ZUNhcmQuY2xvc2UoKTtcbiAgICAgICAgICBuZXdDYXJkLl90cmFzaEJ0bigpO1xuICAgICAgICB9KVxuICAgICAgICAuY2F0Y2goKGVycikgPT4gY29uc29sZS5sb2coZXJyKSk7XG4gICAgICB9KTtcbiAgICB9LFxuICAgIGhhbmRsZUFkZExpa2U6ICh7aWR9KSA9PiB7XG4gICAgICBjb25zb2xlLmxvZyhpZClcbiAgICAgIGFwaS5hZGRMaWtlKGlkKS50aGVuKChyZXMpID0+IHtcbiAgICAgICAgbmV3Q2FyZC51cGRhdGVMaWtlcyhyZXMubGlrZXMpO1xuICAgICAgICBuZXdDYXJkLl9hZGRMaWtlKCk7XG4gICAgICB9KVxuICAgICAgLmNhdGNoKChlcnIpID0+IGNvbnNvbGUubG9nKGVycikpO1xuICAgIH0sXG4gICAgaGFuZGxlUmVtb3ZlTGlrZTogKHtpZH0pID0+IHtcbiAgICAgIGFwaS5kZWxldGVMaWtlKGlkKS50aGVuKChyZXMpID0+IHtcbiAgICAgICAgbmV3Q2FyZC51cGRhdGVMaWtlcyhyZXMubGlrZXMpO1xuICAgICAgICBuZXdDYXJkLl9yZW1vdmVMaWtlKCk7XG4gICAgICB9KVxuICAgICAgLmNhdGNoKChlcnIpID0+IGNvbnNvbGUubG9nKGVycikpO1xuICAgIH0sXG4gICAgdXNlcklEOiBwcm9maWxlSW5mby51c2VySURcbiAgfSk7XG4gIHJldHVybiBuZXdDYXJkLmdlbmVyYXRlQ2FyZCgpO1xufTtcblxuLy8gUmVuZGVyIGluaXRpYWwgY2FyZHNcbi8qY29uc3QgaW5pdGlhbENhcmRMaXN0ID0gbmV3IFNlY3Rpb24oe1xuICBkYXRhOiBpbml0aWFsQ2FyZHMsXG4gIHJlbmRlcmVyOiAoaXRlbSkgPT4ge1xuICAgIGNvbnN0IGRlZmF1bHRDYXJkID0gbmV3IENhcmQoaXRlbSwgJyNlbGVtZW50LXRlbXBsYXRlJywge1xuICAgICAgaGFuZGxlQ2FyZENsaWNrOiAobGluaywgbmFtZSkgPT4ge1xuICAgICAgICBjb25zdCBwb3B1cEltYWdlID0gbmV3IFBvcHVwV2l0aEltYWdlKCcjaW1hZ2UtcG9wdXAnLCBsaW5rLCBuYW1lKTtcbiAgICAgICAgcG9wdXBJbWFnZS5vcGVuKCk7XG4gICAgICB9XG4gICAgfSk7XG4gICAgY29uc3QgZGVmYXVsdEVsZW1lbnRDYXJkID0gZGVmYXVsdENhcmQuZ2VuZXJhdGVDYXJkKCk7XG4gICAgaW5pdGlhbENhcmRMaXN0LmFkZEluaXRhbEl0ZW1zKGRlZmF1bHRFbGVtZW50Q2FyZCk7XG4gIH1cbn0sICcjZWxlbWVudHMnKTtcblxuaW5pdGlhbENhcmRMaXN0LnJlbmRlcmVkSXRlbXMoKTtcblxuLy8gQ3JlYXRlIG5ldyBjYXJkc1xuZnVuY3Rpb24gY3JlYXRlQ2FyZHMoaXRlbSkge1xuICBjb25zdCBjYXJkID0gbmV3IENhcmQoaXRlbSwgJyNlbGVtZW50LXRlbXBsYXRlJywge1xuICAgIGhhbmRsZUNhcmRDbGljazogKGxpbmssIG5hbWUpID0+IHtcbiAgICAgIGNvbnN0IGltYWdlUG9wdXAgPSBuZXcgUG9wdXBXaXRoSW1hZ2UoJyNpbWFnZS1wb3B1cCcsIGxpbmssIG5hbWUpO1xuICAgICAgaW1hZ2VQb3B1cC5vcGVuKCk7XG4gICAgfSxcbiAgfSk7XG4gIGNvbnN0IGNhcmRFbGVtZW50ID0gY2FyZC5nZW5lcmF0ZUNhcmQoKTtcbiAgaW5pdGlhbENhcmRMaXN0LmFkZEl0ZW1zKGNhcmRFbGVtZW50KTtcbn1cblxuY29uc3QgY2FyZHNGb3JtID0gbmV3IFBvcHVwV2l0aEZvcm0oe1xuICBwb3B1cFNlbGVjdG9yOiAnI3BvcHVwX19jYXJkcycsXG4gIHN1Ym1pdENhbGxiYWNrOiAoaXRlbSkgPT4ge1xuICAgIGNyZWF0ZUNhcmRzKGl0ZW0pO1xuICAgIGNhcmRzRm9ybS5jbG9zZSgpO1xuICB9XG59KTtcblxuY2FyZHNGb3JtLnNldEV2ZW50TGlzdGVuZXJzKCk7XG5cbi8vIENoYW5nZSB1c2VyIGluZm9ybWF0aW9uXG4vKmNvbnN0IHVzZXJJbmZvUG9wdXAgPSBuZXcgUG9wdXBXaXRoRm9ybSh7XG4gIHBvcHVwU2VsZWN0b3I6ICcjcG9wdXBfX3Byb2ZpbGUnLFxuICBzdWJtaXRDYWxsYmFjazogKCkgPT4ge1xuICAgIGNvbnN0IHNldEluZm8gPSBuZXcgVXNlckluZm8oe1xuICAgICAgbmFtZVNlbGVjdG9yOiBwcm9maWxlQXV0aG9yLFxuICAgICAgYWJvdXRTZWxlY3RvcjogcHJvZmlsZUFib3V0XG4gICAgfSlcbiAgICBzZXRJbmZvLnNldFVzZXJJbmZvKCk7XG4gIH1cbn0pO1xuXG51c2VySW5mb1BvcHVwLnNldEV2ZW50TGlzdGVuZXJzKCk7Ki9cblxuY29uc3QgdG9nZ2xlQWRkQ2FyZHNQb3B1cCA9ICgpID0+IHtcbiAgcG9wdXBQbGFjZXMuY2xhc3NMaXN0LnRvZ2dsZSgncG9wdXBfb3BlbmVkJyk7XG59XG5cbmFkZENhcmRCdG4uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCB0b2dnbGVBZGRDYXJkc1BvcHVwKTtcblxuY29uc3Qgb3BlblByb2ZpbGVQb3B1cCA9ICgpID0+IHtcbiAgcG9wdXBQcm9maWxlLmNsYXNzTGlzdC5hZGQoJ3BvcHVwX29wZW5lZCcpO1xuICBzdWJtaXRQcm9maWxlQnRuLmNsYXNzTGlzdC5hZGQoJ3BvcHVwX19idG5faW5hY3RpdmUnKTtcbn1cblxuZWRpdFByb2ZpbGVCdG4uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBvcGVuUHJvZmlsZVBvcHVwKTtcblxuLypleHBvcnQgZnVuY3Rpb24gY3JlYXRlTmV3Q2FyZChjYXJkKSB7XG4gIGNvbnN0IG5ld0NhcmQgPSBuZXcgQ2FyZChjYXJkLCAnI2VsZW1lbnQtdGVtcGxhdGUnKTtcbiAgY29uc3QgbmV3Q2FyZEVsZW1lbnQgPSBuZXdDYXJkLmdlbmVyYXRlQ2FyZCgpO1xuXG4gIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNlbGVtZW50cycpLnByZXBlbmQobmV3Q2FyZEVsZW1lbnQpO1xufSovXG5cbi8vIElucHV0IHZhbGlkYXRpb25zXG5jb25zdCB2YWxpZGF0aW9uID0gbmV3IEZvcm1WYWxpZGF0b3IoZG9jdW1lbnQpO1xuXG5cbnZhbGlkYXRpb24uZW5hYmxlVmFsaWRhdGlvbigpOyJdLCJuYW1lcyI6WyJDYXJkIiwiZGF0YSIsImNhcmRTZWxlY3RvciIsIl9yZWYiLCJfdGhpcyIsImhhbmRsZUNhcmRDbGljayIsImhhbmRsZURlbGV0ZUNsaWNrIiwiaGFuZGxlQWRkTGlrZSIsImhhbmRsZVJlbW92ZUxpa2UiLCJ1c2VySUQiLCJfY2xhc3NDYWxsQ2hlY2siLCJyZXNBcnJheSIsIl9saWtlc0FycmF5IiwidGhpcyIsIl9uYW1lIiwibmFtZSIsIl9saW5rIiwibGluayIsIl9pZCIsImxpa2VzIiwiX2NhcmRMaWtlcyIsImxlbmd0aCIsIl9vd25lcklkIiwib3duZXIiLCJfY2FyZFNlbGVjdG9yIiwiX2hhbmRsZUNhcmRDbGljayIsIl9oYW5kbGVEZWxldGVDbGljayIsIl9oYW5kbGVBZGRMaWtlIiwiX2hhbmRsZVJlbW92ZUxpa2UiLCJfdXNlciIsIl9oZWFydEJ1dHRvbiIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvciIsImtleSIsInZhbHVlIiwiY29udGVudCIsImNsb25lTm9kZSIsIl90aGlzMiIsIl9lbGVtZW50IiwiX2dldFRlbXBsYXRlIiwiX3NldEV2ZW50TGlzdGVuZXJzIiwidGV4dENvbnRlbnQiLCJzcmMiLCJhbHQiLCJjb25jYXQiLCJoYXNVc2VyTGlrZWQiLCJzb21lIiwibGlrZSIsImNsYXNzTGlzdCIsInRvZ2dsZSIsIl90aGlzMyIsImFkZEV2ZW50TGlzdGVuZXIiLCJjb25zb2xlIiwibG9nIiwiaWQiLCJfb3BlbkltYWdlUG9wdXAiLCJyZW1vdmUiLCJhZGQiLCJjbG9zZXN0IiwiRm9ybVZhbGlkYXRvciIsIl9jcmVhdGVDbGFzcyIsInZhbGlkYXRpb24iLCJfZGVmaW5lUHJvcGVydHkiLCJmb3JtRWxlbWVudCIsImlucHV0RWxlbWVudCIsImVycm9yTWVzc2FnZSIsImVycm9yRWxlbWVudCIsInZhbGlkaXR5IiwidmFsaWQiLCJfaGlkZUlucHV0RXJyb3IiLCJfc2hvd0lucHV0RXJyb3IiLCJ2YWxpZGF0aW9uTWVzc2FnZSIsImlucHV0TGlzdCIsImJ1dHRvbkVsZW1lbnQiLCJfaGFzSW52YWxpZElucHV0IiwiQXJyYXkiLCJmcm9tIiwicXVlcnlTZWxlY3RvckFsbCIsIl90b2dnbGVCdXR0b25TdGF0ZSIsImZvckVhY2giLCJfY2hlY2tJbnB1dFZhbGlkaXR5IiwiZXZ0IiwicHJldmVudERlZmF1bHQiLCJmaWVsZHNldCIsIl92YWxpZGF0aW9uIiwiU2VjdGlvbiIsImNvbnRhaW5lclNlbGVjdG9yIiwicmVuZGVyZXIiLCJfZGF0YUFycmF5IiwiX2NvbnRhaW5lciIsIml0ZW0iLCJlbGVtZW50IiwiYXBwZW5kIiwicHJlcGVuZCIsIlBvcHVwIiwicG9wdXBTZWxlY3RvciIsIl9wb3B1cEVsZW1lbnQiLCJfaGFuZGxlRXNjQ2xvc2UiLCJyZW1vdmVFdmVudExpc3RlbmVyIiwiY2xvc2UiLCJ0YXJnZXQiLCJjb250YWlucyIsIl9oYW5kbGVPdXRzaWRlQ2xpY2siLCJQb3B1cFdpdGhJbWFnZSIsIl9Qb3B1cCIsIl9pbmhlcml0cyIsIl9zdXBlciIsImNhbGwiLCJfcG9wdXBJbWFnZSIsIl9wb3B1cFRpdGxlIiwiX2dldCIsIl9nZXRQcm90b3R5cGVPZiIsInByb3RvdHlwZSIsIlBvcHVwV2l0aEZvcm0iLCJzdWJtaXRDYWxsYmFjayIsIl9mb3JtIiwiX2J1dHRvblN1Ym1pdCIsIl9oYW5kbGVGb3JtU3VibWl0IiwiX2lucHV0TGlzdCIsImZvcm1WYWx1ZXMiLCJpbnB1dCIsIl9nZXRJbnB1dFZhbHVlcyIsInJlc2V0IiwiVXNlckluZm8iLCJuYW1lU2VsZWN0b3IiLCJhYm91dFNlbGVjdG9yIiwiYXZhdGFyU2VsZWN0b3IiLCJfdXNlcm5hbWUiLCJfYWJvdXQiLCJfYXZhdGFyU2VsZWN0b3IiLCJfdXNlcklEIiwiX25hbWVJbnB1dCIsIl9hYm91dElucHV0IiwiYWJvdXQiLCJfam9iSW5wdXQiLCJ1c2VybmFtZSIsImF2YXRhciIsIkFwaSIsImJhc2VVUkwiLCJoZWFkZXJzIiwiX2Jhc2VVUkwiLCJfaGVhZGVycyIsImZldGNoIiwibWV0aG9kIiwidGhlbiIsInJlcyIsIm9rIiwianNvbiIsIlByb21pc2UiLCJyZWplY3QiLCJzdGF0dXMiLCJib2R5IiwiSlNPTiIsInN0cmluZ2lmeSIsImNhcmRJRCIsIlBvcHVwV2l0aENvbmZpcm1hdGlvbiIsImhhbmRsZUZvcm1TdWJtaXQiLCJzdWJtaXRCdXR0b24iLCJfc3VibWl0QnV0dG9uIiwicmVuZGVyTG9hZGluZyIsImFjdGlvbiIsImlzTG9hZGluZyIsInBhZ2VDb250YWluZXIiLCJwcm9maWxlQXV0aG9yIiwicHJvZmlsZUFib3V0IiwicHJvZmlsZUNvbnRhaW5lciIsInBvcHVwUHJvZmlsZSIsImVkaXRQcm9maWxlQnRuIiwic3VibWl0UHJvZmlsZUJ0biIsInBsYWNlc0NvbnRhaW5lciIsInBvcHVwUGxhY2VzIiwiYWRkQ2FyZEJ0biIsInByb2ZpbGVJbmZvIiwicmVtb3ZlQ2FyZCIsImltYWdlUG9wdXAiLCJzZXRFdmVudExpc3RlbmVycyIsImFwaSIsImF1dGhvcml6YXRpb24iLCJlZGl0UHJvZmlsZSIsImVkaXRQcm9maWxlSW5mbyIsInNldFVzZXJJbmZvIiwiY2F0Y2giLCJlcnIiLCJjcmVhdGVDYXJkIiwibmV3Q2FyZCIsIm9wZW4iLCJfcmVmMiIsInNldFN1Ym1pdEFjdGlvbiIsImRlbGV0ZUNhcmQiLCJfdHJhc2hCdG4iLCJfcmVmMyIsImFkZExpa2UiLCJ1cGRhdGVMaWtlcyIsIl9hZGRMaWtlIiwiX3JlZjQiLCJkZWxldGVMaWtlIiwiX3JlbW92ZUxpa2UiLCJnZW5lcmF0ZUNhcmQiLCJnZXRVc2VySW5mbyIsImdldEluaXRpYWxDYXJkcyIsImNhcmRTZWN0aW9uIiwiY2FyZEVsZW1lbnQiLCJhZGRJbml0YWxJdGVtcyIsInJlbmRlcmVkSXRlbXMiLCJhZGRDYXJkIiwiYWRkTmV3Q2FyZCIsImNhcmQiLCJuZXdDYXJkRWxlbWVudCIsImFkZEl0ZW1zIiwiZW5hYmxlVmFsaWRhdGlvbiJdLCJzb3VyY2VSb290IjoiIn0=