!function(){"use strict";function e(t){return e="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},e(t)}function t(e,t){for(var r=0;r<t.length;r++){var o=t[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,n(o.key),o)}}function n(t){var n=function(t,n){if("object"!==e(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var o=r.call(t,"string");if("object"!==e(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(t);return"symbol"===e(n)?n:String(n)}var r=function(){function e(t,r,o){var i,u,c,a=this,l=o.handleCardClick,s=o.handleDeleteClick,f=o.handleAddLike,p=o.handleRemoveLike,y=o.userID;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),i=this,c=function(e){return a._likesArray=e,a._likesArray},(u=n(u="updateLikes"))in i?Object.defineProperty(i,u,{value:c,enumerable:!0,configurable:!0,writable:!0}):i[u]=c,this._name=t.name,this._link=t.link,this._id=t.id,this._likesArray=t.likes,this._cardLikes=this._likesArray.length,this._ownerId=t.owner._id,this._cardSelector=r,this._handleCardClick=l,this._handleDeleteClick=s,this._handleAddLike=f,this._handleRemoveLike=p,this._user=y,this._heartButton=document.querySelector(".element__heart")}var r,o;return r=e,(o=[{key:"_getTemplate",value:function(){return document.querySelector(this._cardSelector).content.querySelector(".element").cloneNode(!0)}},{key:"generateCard",value:function(){var e=this;this._element=this._getTemplate(),this._setEventListeners(),this._element.querySelector(".element__name").textContent=this._name,this._element.querySelector(".element__image").src=this._link,this._element.querySelector(".element__image").alt="Imagen de ".concat(this._name),this._element.querySelector(".element__like-counter").textContent=this._cardLikes?this._cardLikes:"";var t=this._likesArray.some((function(t){return t._id===e._user}));return this._element.querySelector(".element__heart").classList.toggle("element__heart_black",t),this._element}},{key:"_setEventListeners",value:function(){var e=this;this._element.querySelector(".element__heart").addEventListener("click",(function(){e._likesArray.some((function(t){return t._id===e._user}))?e._handleRemoveLike({id:e._id}):e._handleAddLike({id:e._id})})),this._element.querySelector(".element__image").addEventListener("click",(function(){e._openImagePopup()})),this._element.querySelector(".element__trash").addEventListener("click",(function(){e._handleDeleteClick({id:e._id})})),this._ownerId!==this._user&&this._element.querySelector(".element__trash").remove()}},{key:"_addLike",value:function(){this._element.querySelector(".element__heart").classList.add("element__heart_black"),this._element.querySelector(".element__like-counter").textContent=this._likesArray.length}},{key:"_removeLike",value:function(){this._element.querySelector(".element__heart").classList.remove("element__heart_black"),this._element.querySelector(".element__like-counter").textContent=this._likesArray.length,"0"===this._cardLikes&&(this._element.querySelector(".element__like-counter").textContent="")}},{key:"_trashBtn",value:function(){this._element.querySelector(".element__trash").closest(".element").remove()}},{key:"_openImagePopup",value:function(){this._handleCardClick({link:this._link,name:this._name})}}])&&t(r.prototype,o),Object.defineProperty(r,"prototype",{writable:!1}),e}();function o(e){return o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},o(e)}function i(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,a(r.key),r)}}function u(e,t,n){return t&&i(e.prototype,t),n&&i(e,n),Object.defineProperty(e,"prototype",{writable:!1}),e}function c(e,t,n){return(t=a(t))in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e){var t=function(e,t){if("object"!==o(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!==o(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"===o(t)?t:String(t)}var l=u((function e(t){var n=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),c(this,"_showInputError",(function(e,t,n){var r=e.querySelector(".".concat(t.id,"-error"));t.classList.add("form__input_type_error"),r.textContent=n,r.classList.add("form__input-error_active")})),c(this,"_hideInputError",(function(e,t){var n=e.querySelector(".".concat(t.id,"-error"));t.classList.remove("form__input_type_error"),n.classList.remove("form__input-error_active"),n.textContent=""})),c(this,"_checkInputValidity",(function(e,t){t.validity.valid?n._hideInputError(e,t):n._showInputError(e,t,t.validationMessage)})),c(this,"_hasInvalidInput",(function(e){return e.some((function(e){return!e.validity.valid}))})),c(this,"_toggleButtonState",(function(e,t){n._hasInvalidInput(e)?t.classList.add("popup__btn_inactive"):t.classList.remove("popup__btn_inactive")})),c(this,"_setEventListeners",(function(e){var t=Array.from(e.querySelectorAll(".form__input")),r=e.querySelector(".popup__btn");n._toggleButtonState(t,r),t.forEach((function(o){o.addEventListener("input",(function(){n._checkInputValidity(e,o),n._toggleButtonState(t,r)}))}))})),c(this,"enableValidation",(function(){Array.from(document.querySelectorAll(".form")).forEach((function(e){var t=e.querySelector(".popup__btn");e.addEventListener("submit",(function(e){t.classList.add("popup__btn_inactive"),e.preventDefault()})),Array.from(e.querySelectorAll(".form__set")).forEach((function(e){n._setEventListeners(e)}))}))})),this._validation=t}));function s(e){return s="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},s(e)}function f(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==s(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!==s(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(r.key),"symbol"===s(o)?o:String(o)),r)}var o}var p=function(){function e(t,n){var r=t.data,o=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._dataArray=r,this.renderer=o,this._container=document.querySelector(n)}var t,n;return t=e,(n=[{key:"renderedItems",value:function(){var e=this;this._dataArray.forEach((function(t){e.renderer(t)}))}},{key:"addInitalItems",value:function(e){this._container.append(e)}},{key:"addItems",value:function(e){this._container.prepend(e)}}])&&f(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function y(e){return y="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},y(e)}function m(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==y(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!==y(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(r.key),"symbol"===y(o)?o:String(o)),r)}var o}var h=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._popupElement=document.querySelector(t)}var t,n;return t=e,(n=[{key:"open",value:function(){this._popupElement.classList.add("popup_opened"),document.addEventListener("keydown",this._handleEscClose)}},{key:"close",value:function(){this._popupElement.classList.remove("popup_opened"),document.removeEventListener("keydown",this._handleEscClose)}},{key:"_handleEscClose",value:function(e){if("Escape"===e.key)return this.close()}},{key:"_handleOutsideClick",value:function(e){(e.target.classList.contains("popup__section")||e.target.classList.contains("popup__background"))&&this.close()}},{key:"setEventListeners",value:function(){var e=this;this._popupElement.querySelector(".popup__close-btn").addEventListener("click",(function(){e.close()})),document.addEventListener("keydown",(function(t){e._handleEscClose(t)})),this._popupElement.addEventListener("click",(function(t){e._handleOutsideClick(t)}))}}])&&m(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function d(e){return d="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},d(e)}function _(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==d(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!==d(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(r.key),"symbol"===d(o)?o:String(o)),r)}var o}function b(){return b="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=S(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},b.apply(this,arguments)}function v(e,t){return v=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},v(e,t)}function S(e){return S=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},S(e)}var g=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&v(e,t)}(u,e);var t,n,r,o,i=(r=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=S(r);if(o){var n=S(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return function(e,t){if(t&&("object"===d(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(this,e)});function u(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,u),(t=i.call(this,e))._popupImage=t._popupElement.querySelector(".image-popup__image"),t._popupTitle=t._popupElement.querySelector(".image-popup__title"),t}return t=u,(n=[{key:"open",value:function(e){var t=e.link,n=e.name;b(S(u.prototype),"open",this).call(this),this._popupImage.src=t,this._popupImage.alt="Imagen de ".concat(n),this._popupTitle.textContent=n,b(S(u.prototype),"setEventListeners",this).call(this)}}])&&_(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),u}(h);function k(e){return k="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},k(e)}function w(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==k(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!==k(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(r.key),"symbol"===k(o)?o:String(o)),r)}var o}function E(){return E="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=L(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},E.apply(this,arguments)}function j(e,t){return j=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},j(e,t)}function L(e){return L=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},L(e)}var P=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&j(e,t)}(u,e);var t,n,r,o,i=(r=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=L(r);if(o){var n=L(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return function(e,t){if(t&&("object"===k(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(this,e)});function u(e){var t,n=e.popupSelector,r=e.submitCallback;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,u),(t=i.call(this,n))._form=t._popupElement.querySelector(".form"),t._buttonSubmit=t._popupElement.querySelector(".popup__btn"),t._handleFormSubmit=r,t}return t=u,(n=[{key:"_getInputValues",value:function(){var e=this;return this._inputList=this._form.querySelectorAll(".form__input"),this.formValues={},this._inputList.forEach((function(t){e.formValues[t.name]=t.value})),this.formValues}},{key:"setEventListeners",value:function(){var e=this;E(L(u.prototype),"setEventListeners",this).call(this),this._form.addEventListener("submit",(function(t){t.preventDefault(),e._handleFormSubmit(e._getInputValues()),e.close()}))}},{key:"close",value:function(){E(L(u.prototype),"close",this).call(this),this._form.reset(),this._popupElement.querySelector(".popup__btn").classList.add("popup__btn_inactive")}}])&&w(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),u}(h);function O(e){return O="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},O(e)}function q(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==O(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!==O(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(r.key),"symbol"===O(o)?o:String(o)),r)}var o}var C=function(){function e(t){var n=t.nameSelector,r=t.aboutSelector,o=t.avatarSelector,i=t.userID;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._username=n,this._about=r,this._avatarSelector=o,this._userID=i,this._nameInput=document.querySelector("#name-input"),this._aboutInput=document.querySelector("#about-input")}var t,n;return t=e,(n=[{key:"getUserInfo",value:function(){return{name:this._nameInput.textContent,about:this._jobInput.textContent}}},{key:"setUserInfo",value:function(e){var t=e.username,n=e.about;this._username.textContent=t,this._about.textContent=n}},{key:"setUserAvatar",value:function(e){this._avatarSelector.src=e}}])&&q(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function I(e){return I="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},I(e)}function R(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==I(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!==I(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(r.key),"symbol"===I(o)?o:String(o)),r)}var o}var T=function(){function e(t){var n=t.baseURL,r=t.headers;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._baseURL=n,this._headers=r}var t,n;return t=e,(n=[{key:"getInitialCards",value:function(){return fetch("".concat(this._baseURL,"/cards"),{method:"GET",headers:this._headers}).then((function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))}))}},{key:"addNewCard",value:function(e,t){return fetch("".concat(this._baseURL,"/cards"),{method:"POST",headers:this._headers,body:JSON.stringify({name:e,link:t})}).then((function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))}))}},{key:"deleteCard",value:function(e){return fetch("".concat(this._baseURL,"/cards/").concat(e),{method:"DELETE",headers:this._headers}).then((function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))}))}},{key:"getUserInfo",value:function(){return fetch("".concat(this._baseURL,"/users/me"),{method:"GET",headers:this._headers}).then((function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))}))}},{key:"editProfileInfo",value:function(e,t){return fetch("".concat(this._baseURL,"/users/me"),{method:"PATCH",headers:this._headers,body:JSON.stringify({name:e,about:t})}).then((function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))}))}},{key:"addLike",value:function(e){return fetch("".concat(this._baseURL,"/likes/").concat(e),{method:"PUT",headers:this._headers}).then((function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))}))}},{key:"deleteLike",value:function(e){return fetch("".concat(this._baseURL,"/likes/").concat(e),{method:"DELETE",headers:this._headers}).then((function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))}))}},{key:"avatarImage",value:function(e){return fetch("".concat(this._baseURL,"/users/me/avatar"),{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e})}).then((function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))}))}}])&&R(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function A(e){return A="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},A(e)}function D(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==A(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!==A(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(r.key),"symbol"===A(o)?o:String(o)),r)}var o}function x(){return x="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=B(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},x.apply(this,arguments)}function U(e,t){return U=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},U(e,t)}function B(e){return B=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},B(e)}var V=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&U(e,t)}(u,e);var t,n,r,o,i=(r=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=B(r);if(o){var n=B(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return function(e,t){if(t&&("object"===A(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(this,e)});function u(e){var t,n=e.popupSelector,r=e.handleFormSubmit,o=e.submitButton;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,u),(t=i.call(this,n))._handleFormSubmit=r,t._submitButton=o,t}return t=u,(n=[{key:"close",value:function(){x(B(u.prototype),"close",this).call(this),this.renderLoading(!1)}},{key:"setSubmitAction",value:function(e){this._handleFormSubmit=e}},{key:"renderLoading",value:function(e){e&&(this._submitButton.textContent="Guardando...")}},{key:"setEventListeners",value:function(){var e=this;x(B(u.prototype),"setEventListeners",this).call(this),this._submitButton.addEventListener("click",(function(t){t.preventDefault(),e.renderLoading(!0),e._handleFormSubmit()}))}}])&&D(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),u}(h),F=document.querySelector(".root").querySelector(".page"),N=F.querySelector(".profile__author"),G=F.querySelector(".profile__about-me"),J=(F.querySelector(".profile__container"),F.querySelector("#popup__avatar-image"),F.querySelector("#popup__profile-form")),H=F.querySelector("#popup__profile"),z=(J.querySelector("#name-input"),J.querySelector("#about-input"),H.querySelector(".popup__profile-close-btn"),F.querySelector(".profile__edit-btn")),M=H.querySelector(".popup__btn"),K=F.querySelector("#popup__places-form"),Q=F.querySelector("#popup__cards"),W=(Q.querySelector(".popup__places-close-btn"),F.querySelector(".profile__add-btn"));K.querySelector(".popup__place"),K.querySelector(".popup__url"),K.querySelector(".popup__btn"),F.querySelector("#image-popup"),document.querySelector(".profile__container").addEventListener("click",(function(){document.querySelector("#popup__avatar-image").classList.add("popup_opened")}));var X=new C({nameSelector:N,aboutSelector:G,avatarSelector:document.querySelector(".profile__photo")}),Y=new V({popupSelector:"#popup__delete",submitButton:document.querySelector(".popup__confirm-btn")}),Z=new g("#image-popup");Z.setEventListeners(),Y.setEventListeners();var $=new T({baseURL:"https://around.nomoreparties.co/v1/web_es_07",headers:{authorization:"b7e71284-4020-44f4-a80f-43722c5b3ece","Content-Type":"application/json"}}),ee=new P({popupSelector:"#popup__profile",submitCallback:function(e){$.editProfileInfo(e.name,e.about).then((function(e){X.setUserInfo({username:e.name,about:e.about}),ee.close()})).catch((function(e){return console.log(e)}))}});function te(e){var t=new r(e,"#element-template",{handleCardClick:function(e){var t=e.name,n=e.link;Z.open({name:t,link:n})},handleDeleteClick:function(e){var n=e.id;Y.open(),Y.setSubmitAction((function(){$.deleteCard(n).then((function(){Y.close(),t._trashBtn()})).catch((function(e){return console.log(e)}))}))},handleAddLike:function(e){var n=e.id;$.addLike(n).then((function(e){t.updateLikes(e.likes),t._addLike()})).catch((function(e){return console.log(e)}))},handleRemoveLike:function(e){var n=e.id;$.deleteLike(n).then((function(e){t.updateLikes(e.likes),t._removeLike()})).catch((function(e){return console.log(e)}))},userID:X.userID});return t.generateCard()}ee.setEventListeners(),$.getUserInfo().then((function(e){X.setUserInfo({username:e.name,about:e.about}),X.userID=e._id})).then((function(){$.getInitialCards().then((function(e){console.log(e);var t=new p({data:e,renderer:function(e){var n=te(e);t.addInitalItems(n)}},"#elements");t.renderedItems();var n=new P({popupSelector:"#popup__cards",submitCallback:function(e){$.addNewCard(e.name,e.popup__link).then((function(e){var r=te(e);t.addItems(r),n.close()})).catch((function(e){return console.log(e)}))}});n.setEventListeners()}))})),W.addEventListener("click",(function(){Q.classList.toggle("popup_opened")})),z.addEventListener("click",(function(){H.classList.add("popup_opened"),M.classList.add("popup__btn_inactive")})),new l(document).enableValidation()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,